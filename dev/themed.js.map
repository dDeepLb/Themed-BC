{
  "version": 3,
  "sources": ["<define:LAST_COMMIT_HASH>", "../node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js", "../node_modules/.pnpm/is-arrayish@0.3.2/node_modules/is-arrayish/index.js", "../node_modules/.pnpm/simple-swizzle@0.2.2/node_modules/simple-swizzle/index.js", "../node_modules/.pnpm/color-string@1.9.1/node_modules/color-string/index.js", "../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js", "../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js", "../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js", "../node_modules/.pnpm/color@4.2.3/node_modules/color/index.js", "../node_modules/.pnpm/bondage-club-mod-sdk@1.2.0/node_modules/bondage-club-mod-sdk/dist/bcmodsdk.js", "../src/Themed.ts", "../src/Base/Modules.ts", "../src/Base/SettingUtils.ts", "../src/Screens/MainMenu.ts", "../src/Base/BaseSetting.ts", "../src/Modules/GuiRedraw.ts", "../src/Base/BaseModule.ts", "../src/Hooks/GuiRedraw/AppearanceGetPreviewImageColor.ts", "../src/Utilities/Color.ts", "../src/Utilities/SDK.ts", "../src/Utilities/Console.ts", "../src/Utilities/ModDefinition.ts", "../src/Hooks/GuiRedraw/DrawBackNextButton.ts", "../src/Hooks/GuiRedraw/DrawButton.ts", "../src/Utilities/Drawing.ts", "../src/Hooks/GuiRedraw/DrawButtonHover.ts", "../src/Hooks/GuiRedraw/DrawCheckbox.ts", "../src/Hooks/GuiRedraw/DrawEmptyRect.ts", "../src/Hooks/GuiRedraw/DrawImageEx.ts", "../src/Hooks/GuiRedraw/DrawPreviewBox.ts", "../src/Hooks/GuiRedraw/DrawRect.ts", "../src/Hooks/GuiRedraw/DrawRoomBackground.ts", "../src/Utilities/Data.ts", "../src/Utilities/String.ts", "../src/Hooks/GuiRedraw/DrawText.ts", "../src/Hooks/GuiRedraw/DrawTextFit.ts", "../src/Hooks/GuiRedraw/DrawTextWrap.ts", "../src/Translation.ts", "../src/Base/SettingDefinitions.ts", "../src/Screens/Reset.ts", "../src/Utilities/Style.ts", "../src/Screens/Support.ts", "../src/Migrators/V140Migrator.ts", "../src/Migrators/BaseMigrator.ts", "../src/Modules/Colors.ts", "../src/Screens/Colors.ts", "../src/Utilities/Integration.ts", "../src/Modules/Commands.ts", "../src/Modules/Global.ts", "../src/Screens/Global.ts", "../src/Modules/Integration.ts", "../src/Screens/Integration.ts", "../src/Modules/Profiles.ts", "../src/Screens/Profiles.ts", "../src/Utilities/Other.ts", "../src/Modules/Share.ts", "../src/Modules/Version.ts"],
  "sourcesContent": ["", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "module.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n", "'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n", "/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\nvar hasOwnProperty = Object.hasOwnProperty;\n\nvar reverseNames = Object.create(null);\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (hasOwnProperty.call(colorNames, name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {},\n\tget: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)(?=[\\s,])\\s*(?:,\\s*)?([+-]?\\d+)\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*,?\\s*([+-]?[\\d\\.]+)\\%\\s*(?:[,|\\/]\\s*([+-]?[\\d\\.]+)(%?)\\s*)?\\)$/;\n\tvar keyword = /^(\\w+)$/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = parseInt(hexAlpha + hexAlpha, 16) / 255;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\tif (match[5]) {\n\t\t\t\trgb[3] = parseFloat(match[4]) * 0.01;\n\t\t\t} else {\n\t\t\t\trgb[3] = parseFloat(match[4]);\n\t\t\t}\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\tif (!hasOwnProperty.call(colorNames, match[1])) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*,?\\s*([+-]?[\\d\\.]+)%\\s*(?:[,|\\/]\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?(?=\\.\\d|\\d)(?:0|[1-9]\\d*)?(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = Math.round(num).toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "const colorString = require('color-string');\nconst convert = require('color-convert');\n\nconst skippedModels = [\n\t// To be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// Gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// Shouldn't really be in color-convert either...\n\t'hex',\n];\n\nconst hashedModelKeys = {};\nfor (const model of Object.keys(convert)) {\n\thashedModelKeys[[...convert[model].labels].sort().join('')] = model;\n}\n\nconst limiters = {};\n\nfunction Color(object, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(object, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tlet i;\n\tlet channels;\n\n\tif (object == null) { // eslint-disable-line no-eq-null,eqeqeq\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (object instanceof Color) {\n\t\tthis.model = object.model;\n\t\tthis.color = [...object.color];\n\t\tthis.valpha = object.valpha;\n\t} else if (typeof object === 'string') {\n\t\tconst result = colorString.get(object);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + object);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (object.length > 0) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tconst newArray = Array.prototype.slice.call(object, 0, channels);\n\t\tthis.color = zeroArray(newArray, channels);\n\t\tthis.valpha = typeof object[channels] === 'number' ? object[channels] : 1;\n\t} else if (typeof object === 'number') {\n\t\t// This is always RGB - can be converted later on.\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(object >> 16) & 0xFF,\n\t\t\t(object >> 8) & 0xFF,\n\t\t\tobject & 0xFF,\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tconst keys = Object.keys(object);\n\t\tif ('alpha' in object) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof object.alpha === 'number' ? object.alpha : 0;\n\t\t}\n\n\t\tconst hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(object));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tconst {labels} = convert[this.model];\n\t\tconst color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(object[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// Perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tconst limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString() {\n\t\treturn this.string();\n\t},\n\n\ttoJSON() {\n\t\treturn this[this.model]();\n\t},\n\n\tstring(places) {\n\t\tlet self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString(places) {\n\t\tconst self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tconst args = self.valpha === 1 ? self.color : [...self.color, this.valpha];\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray() {\n\t\treturn this.valpha === 1 ? [...this.color] : [...this.color, this.valpha];\n\t},\n\n\tobject() {\n\t\tconst result = {};\n\t\tconst {channels} = convert[this.model];\n\t\tconst {labels} = convert[this.model];\n\n\t\tfor (let i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray() {\n\t\tconst rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject() {\n\t\tconst rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround(places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color([...this.color.map(roundToPlace(places)), this.valpha], this.model);\n\t},\n\n\talpha(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color([...this.color, Math.max(0, Math.min(1, value))], this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// Rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, value => ((value % 360) + 360) % 360),\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(95.047)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(108.833)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\thexa(value) {\n\t\tif (value !== undefined) {\n\t\t\treturn new Color(value);\n\t\t}\n\n\t\tconst rgbArray = this.rgb().round().color;\n\n\t\tlet alphaHex = Math.round(this.valpha * 255).toString(16).toUpperCase();\n\t\tif (alphaHex.length === 1) {\n\t\t\talphaHex = '0' + alphaHex;\n\t\t}\n\n\t\treturn colorString.to.hex(rgbArray) + alphaHex;\n\t},\n\n\trgbNumber() {\n\t\tconst rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity() {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tconst rgb = this.rgb().color;\n\n\t\tconst lum = [];\n\t\tfor (const [i, element] of rgb.entries()) {\n\t\t\tconst chan = element / 255;\n\t\t\tlum[i] = (chan <= 0.04045) ? chan / 12.92 : ((chan + 0.055) / 1.055) ** 2.4;\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast(color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tconst lum1 = this.luminosity();\n\t\tconst lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel(color2) {\n\t\t// https://www.w3.org/TR/WCAG/#contrast-enhanced\n\t\tconst contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tisDark() {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tconst rgb = this.rgb().color;\n\t\tconst yiq = (rgb[0] * 2126 + rgb[1] * 7152 + rgb[2] * 722) / 10000;\n\t\treturn yiq < 128;\n\t},\n\n\tisLight() {\n\t\treturn !this.isDark();\n\t},\n\n\tnegate() {\n\t\tconst rgb = this.rgb();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tlighten(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate(ratio) {\n\t\tconst hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken(ratio) {\n\t\tconst hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale() {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tconst rgb = this.rgb().color;\n\t\tconst value = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(value, value, value);\n\t},\n\n\tfade(ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer(ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate(degrees) {\n\t\tconst hsl = this.hsl();\n\t\tlet hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix(mixinColor, weight) {\n\t\t// Ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tif (!mixinColor || !mixinColor.rgb) {\n\t\t\tthrow new Error('Argument to \"mix\" was not a Color instance, but rather an instance of ' + typeof mixinColor);\n\t\t}\n\n\t\tconst color1 = mixinColor.rgb();\n\t\tconst color2 = this.rgb();\n\t\tconst p = weight === undefined ? 0.5 : weight;\n\n\t\tconst w = 2 * p - 1;\n\t\tconst a = color1.alpha() - color2.alpha();\n\n\t\tconst w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2;\n\t\tconst w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n};\n\n// Model conversion methods and static constructors\nfor (const model of Object.keys(convert)) {\n\tif (skippedModels.includes(model)) {\n\t\tcontinue;\n\t}\n\n\tconst {channels} = convert[model];\n\n\t// Conversion methods\n\tColor.prototype[model] = function (...args) {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (args.length > 0) {\n\t\t\treturn new Color(args, model);\n\t\t}\n\n\t\treturn new Color([...assertArray(convert[this.model][model].raw(this.color)), this.valpha], model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (...args) {\n\t\tlet color = args[0];\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(args, channels);\n\t\t}\n\n\t\treturn new Color(color, model);\n\t};\n}\n\nfunction roundTo(number, places) {\n\treturn Number(number.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (number) {\n\t\treturn roundTo(number, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tfor (const m of model) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t}\n\n\tmodel = model[0];\n\n\treturn function (value) {\n\t\tlet result;\n\n\t\tif (value !== undefined) {\n\t\t\tif (modifier) {\n\t\t\t\tvalue = modifier(value);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = value;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(value) {\n\treturn Array.isArray(value) ? value : [value];\n}\n\nfunction zeroArray(array, length) {\n\tfor (let i = 0; i < length; i++) {\n\t\tif (typeof array[i] !== 'number') {\n\t\t\tarray[i] = 0;\n\t\t}\n\t}\n\n\treturn array;\n}\n\nmodule.exports = Color;\n", "// Bondage Club Mod Development Kit (1.2.0)\n// For more info see: https://github.com/Jomshir98/bondage-club-mod-sdk\n/** @type {ModSDKGlobalAPI} */\nvar bcModSdk=function(){\"use strict\";const o=\"1.2.0\";function e(o){alert(\"Mod ERROR:\\n\"+o);const e=new Error(o);throw console.error(e),e}const t=new TextEncoder;function n(o){return!!o&&\"object\"==typeof o&&!Array.isArray(o)}function r(o){const e=new Set;return o.filter((o=>!e.has(o)&&e.add(o)))}const i=new Map,a=new Set;function c(o){a.has(o)||(a.add(o),console.warn(o))}function s(o){const e=[],t=new Map,n=new Set;for(const r of f.values()){const i=r.patching.get(o.name);if(i){e.push(...i.hooks);for(const[e,a]of i.patches.entries())t.has(e)&&t.get(e)!==a&&c(`ModSDK: Mod '${r.name}' is patching function ${o.name} with same pattern that is already applied by different mod, but with different pattern:\\nPattern:\\n${e}\\nPatch1:\\n${t.get(e)||\"\"}\\nPatch2:\\n${a}`),t.set(e,a),n.add(r.name)}}e.sort(((o,e)=>e.priority-o.priority));const r=function(o,e){if(0===e.size)return o;let t=o.toString().replaceAll(\"\\r\\n\",\"\\n\");for(const[n,r]of e.entries())t.includes(n)||c(`ModSDK: Patching ${o.name}: Patch ${n} not applied`),t=t.replaceAll(n,r);return(0,eval)(`(${t})`)}(o.original,t);let i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookChainExit)||void 0===i?void 0:i.call(t,o.name,n),c=r.apply(this,e);return null==a||a(),c};for(let t=e.length-1;t>=0;t--){const n=e[t],r=i;i=function(e){var t,i;const a=null===(i=(t=m.errorReporterHooks).hookEnter)||void 0===i?void 0:i.call(t,o.name,n.mod),c=n.hook.apply(this,[e,o=>{if(1!==arguments.length||!Array.isArray(e))throw new Error(`Mod ${n.mod} failed to call next hook: Expected args to be array, got ${typeof o}`);return r.call(this,o)}]);return null==a||a(),c}}return{hooks:e,patches:t,patchesSources:n,enter:i,final:r}}function l(o,e=!1){let r=i.get(o);if(r)e&&(r.precomputed=s(r));else{let e=window;const a=o.split(\".\");for(let t=0;t<a.length-1;t++)if(e=e[a[t]],!n(e))throw new Error(`ModSDK: Function ${o} to be patched not found; ${a.slice(0,t+1).join(\".\")} is not object`);const c=e[a[a.length-1]];if(\"function\"!=typeof c)throw new Error(`ModSDK: Function ${o} to be patched not found`);const l=function(o){let e=-1;for(const n of t.encode(o)){let o=255&(e^n);for(let e=0;e<8;e++)o=1&o?-306674912^o>>>1:o>>>1;e=e>>>8^o}return((-1^e)>>>0).toString(16).padStart(8,\"0\").toUpperCase()}(c.toString().replaceAll(\"\\r\\n\",\"\\n\")),d={name:o,original:c,originalHash:l};r=Object.assign(Object.assign({},d),{precomputed:s(d),router:()=>{},context:e,contextProperty:a[a.length-1]}),r.router=function(o){return function(...e){return o.precomputed.enter.apply(this,[e])}}(r),i.set(o,r),e[r.contextProperty]=r.router}return r}function d(){for(const o of i.values())o.precomputed=s(o)}function p(){const o=new Map;for(const[e,t]of i)o.set(e,{name:e,original:t.original,originalHash:t.originalHash,sdkEntrypoint:t.router,currentEntrypoint:t.context[t.contextProperty],hookedByMods:r(t.precomputed.hooks.map((o=>o.mod))),patchedByMods:Array.from(t.precomputed.patchesSources)});return o}const f=new Map;function u(o){f.get(o.name)!==o&&e(`Failed to unload mod '${o.name}': Not registered`),f.delete(o.name),o.loaded=!1,d()}function g(o,t){o&&\"object\"==typeof o||e(\"Failed to register mod: Expected info object, got \"+typeof o),\"string\"==typeof o.name&&o.name||e(\"Failed to register mod: Expected name to be non-empty string, got \"+typeof o.name);let r=`'${o.name}'`;\"string\"==typeof o.fullName&&o.fullName||e(`Failed to register mod ${r}: Expected fullName to be non-empty string, got ${typeof o.fullName}`),r=`'${o.fullName} (${o.name})'`,\"string\"!=typeof o.version&&e(`Failed to register mod ${r}: Expected version to be string, got ${typeof o.version}`),o.repository||(o.repository=void 0),void 0!==o.repository&&\"string\"!=typeof o.repository&&e(`Failed to register mod ${r}: Expected repository to be undefined or string, got ${typeof o.version}`),null==t&&(t={}),t&&\"object\"==typeof t||e(`Failed to register mod ${r}: Expected options to be undefined or object, got ${typeof t}`);const i=!0===t.allowReplace,a=f.get(o.name);a&&(a.allowReplace&&i||e(`Refusing to load mod ${r}: it is already loaded and doesn't allow being replaced.\\nWas the mod loaded multiple times?`),u(a));const c=o=>{let e=g.patching.get(o.name);return e||(e={hooks:[],patches:new Map},g.patching.set(o.name,e)),e},s=(o,t)=>(...n)=>{var i,a;const c=null===(a=(i=m.errorReporterHooks).apiEndpointEnter)||void 0===a?void 0:a.call(i,o,g.name);g.loaded||e(`Mod ${r} attempted to call SDK function after being unloaded`);const s=t(...n);return null==c||c(),s},p={unload:s(\"unload\",(()=>u(g))),hookFunction:s(\"hookFunction\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);\"number\"!=typeof t&&e(`Mod ${r} failed to hook function '${o}': Expected priority number, got ${typeof t}`),\"function\"!=typeof n&&e(`Mod ${r} failed to hook function '${o}': Expected hook function, got ${typeof n}`);const s={mod:g.name,priority:t,hook:n};return a.hooks.push(s),d(),()=>{const o=a.hooks.indexOf(s);o>=0&&(a.hooks.splice(o,1),d())}})),patchFunction:s(\"patchFunction\",((o,t)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const i=l(o),a=c(i);n(t)||e(`Mod ${r} failed to patch function '${o}': Expected patches object, got ${typeof t}`);for(const[n,i]of Object.entries(t))\"string\"==typeof i?a.patches.set(n,i):null===i?a.patches.delete(n):e(`Mod ${r} failed to patch function '${o}': Invalid format of patch '${n}'`);d()})),removePatches:s(\"removePatches\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to patch a function: Expected function name string, got ${typeof o}`);const t=l(o);c(t).patches.clear(),d()})),callOriginal:s(\"callOriginal\",((o,t,n)=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to call a function: Expected function name string, got ${typeof o}`);const i=l(o);return Array.isArray(t)||e(`Mod ${r} failed to call a function: Expected args array, got ${typeof t}`),i.original.apply(null!=n?n:globalThis,t)})),getOriginalHash:s(\"getOriginalHash\",(o=>{\"string\"==typeof o&&o||e(`Mod ${r} failed to get hash: Expected function name string, got ${typeof o}`);return l(o).originalHash}))},g={name:o.name,fullName:o.fullName,version:o.version,repository:o.repository,allowReplace:i,api:p,loaded:!0,patching:new Map};return f.set(o.name,g),Object.freeze(p)}function h(){const o=[];for(const e of f.values())o.push({name:e.name,fullName:e.fullName,version:e.version,repository:e.repository});return o}let m;const y=void 0===window.bcModSdk?window.bcModSdk=function(){const e={version:o,apiVersion:1,registerMod:g,getModsInfo:h,getPatchingInfo:p,errorReporterHooks:Object.seal({apiEndpointEnter:null,hookEnter:null,hookChainExit:null})};return m=e,Object.freeze(e)}():(n(window.bcModSdk)||e(\"Failed to init Mod SDK: Name already in use\"),1!==window.bcModSdk.apiVersion&&e(`Failed to init Mod SDK: Different version already loaded ('1.2.0' vs '${window.bcModSdk.version}')`),window.bcModSdk.version!==o&&alert(`Mod SDK warning: Loading different but compatible versions ('1.2.0' vs '${window.bcModSdk.version}')\\nOne of mods you are using is using an old version of SDK. It will work for now but please inform author to update`),window.bcModSdk);return\"undefined\"!=typeof exports&&(Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=y),y}();\n", "import { modules, registerModule } from './Base/Modules';\nimport { GUI } from './Base/SettingUtils';\nimport { V140Migrator } from './Migrators/V140Migrator';\nimport { ColorsModule } from './Modules/Colors';\nimport { CommandsModule } from './Modules/Commands';\nimport { GlobalModule } from './Modules/Global';\nimport { GuiRedrawModule } from './Modules/GuiRedraw';\nimport { IntegrationModule } from './Modules/Integration';\nimport { ProfilesModule } from './Modules/Profiles';\nimport { ShareModule } from './Modules/Share';\nimport { VersionModule } from './Modules/Version';\nimport { Localization } from './Translation';\nimport { _Color } from './Utilities/Color';\nimport { conDebug, conLog } from './Utilities/Console';\nimport { settingsLoad } from './Utilities/Data';\nimport { MOD_VERSION_CAPTION } from './Utilities/ModDefinition';\nimport { deepMergeMatchingProperties, hasSetter } from './Utilities/Other';\nimport { hookFunction } from './Utilities/SDK';\nimport { BcStyle } from './Utilities/Style';\n\nfunction initWait() {\n  conLog('Init wait');\n  if (CurrentScreen == null || CurrentScreen === 'Login') {\n    hookFunction('LoginResponse', 0, (args, next) => {\n      conDebug('Init! LoginResponse caught: ', args);\n      next(args);\n      const response = args[0];\n      if (response && typeof response.Name === 'string' && typeof response.AccountName === 'string') {\n        init();\n      }\n    });\n  } else {\n    conLog('Already logged in, init');\n    init();\n  }\n}\n\nexport async function init() {\n  if (window.ThemedLoaded) return;\n\n  await Localization.load();\n\n  settingsLoad();\n\n  if (!initModules()) {\n    unload();\n    return;\n  }\n\n  VersionModule.registerMigrator(new V140Migrator);\n  VersionModule.check();\n\n  for (const m of modules()) {\n    if (m.defaultSettings && hasSetter(m, 'defaultSettings'))\n      m.settings = deepMergeMatchingProperties(m.defaultSettings, m.settings);\n  }\n\n  _Color.composeRoot();\n  BcStyle.injectAll();\n\n  window.ThemedLoaded = true;\n  conLog(`Loaded! Version: ${MOD_VERSION_CAPTION}`);\n}\n\nfunction initModules(): boolean {\n  registerModule(new GUI());\n  registerModule(new GlobalModule());\n  registerModule(new ColorsModule());\n  registerModule(new GuiRedrawModule());\n  registerModule(new IntegrationModule());\n  registerModule(new ProfilesModule());\n  registerModule(new CommandsModule());\n  registerModule(new ShareModule());\n  registerModule(new VersionModule());\n\n  for (const m of modules()) {\n    m.Init();\n  }\n\n  for (const m of modules()) {\n    m.Load();\n  }\n\n  for (const m of modules()) {\n    m.Run();\n  }\n\n  conLog('Modules Loaded.');\n  return true;\n}\n\nexport function unload(): true {\n  unloadModules();\n\n  delete window.ThemedLoaded;\n  conLog('Unloaded.');\n  return true;\n}\n\nfunction unloadModules() {\n  for (const m of modules()) {\n    m.Unload();\n  }\n}\n\ninitWait();\n", "import { BaseModule } from './BaseModule';\n\nexport const modulesMap: Map<string, BaseModule> = new Map<string, BaseModule>();\n\nexport function modules(): BaseModule[] {\n  return [...modulesMap.values()];\n}\n\nexport function registerModule<T extends BaseModule>(module: T): T {\n  modulesMap.set(module.constructor.name, module);\n  return module;\n}\n\nexport function getModule<T extends BaseModule>(moduleType: string): T {\n  return modulesMap.get(moduleType) as T;\n}\n", "import { MainMenu } from '../Screens/MainMenu';\nimport { getText } from '../Translation';\nimport { BaseModule } from './BaseModule';\nimport { GuiSubscreen } from './BaseSetting';\nimport { modules } from './Modules';\nimport { setSubscreen, SETTING_NAME_PREFIX } from './SettingDefinitions';\n\nexport class GUI extends BaseModule {\n  static instance: GUI | null = null;\n\n  private _subscreens: GuiSubscreen[];\n  private _mainMenu: MainMenu;\n  private _currentSubscreen: GuiSubscreen | null = null;\n\n  get subscreens(): GuiSubscreen[] {\n    return this._subscreens;\n  }\n\n  get mainMenu(): MainMenu {\n    return this._mainMenu;\n  }\n\n  get currentSubscreen(): GuiSubscreen | null {\n    return this._currentSubscreen;\n  }\n\n  set currentSubscreen(subscreen: GuiSubscreen | string | null) {\n    if (this._currentSubscreen) {\n      this._currentSubscreen.Unload();\n    }\n    if (typeof subscreen === 'string') {\n      const scr = this._subscreens?.find((s) => s.name === subscreen);\n      if (!scr) throw `Failed to find screen name ${subscreen}`;\n      this._currentSubscreen = scr;\n    } else {\n      this._currentSubscreen = subscreen;\n    }\n\n    PreferenceMessage = '';\n    PreferencePageCurrent = 1;\n\n    let subscreenName = '';\n    if (this._currentSubscreen) {\n      subscreenName = SETTING_NAME_PREFIX + this._currentSubscreen?.name;\n      this._currentSubscreen.Load();\n    }\n\n    // Get BC to render the new screen\n    PreferenceSubscreen = subscreenName as PreferenceSubscreenName || 'Extensions';\n  }\n\n  get currentCharacter(): Character {\n    return Player;\n  }\n\n  constructor() {\n    super();\n    if (GUI.instance) {\n      throw new Error('Duplicate initialization');\n    }\n\n    this._mainMenu = new MainMenu(this);\n    this._subscreens = [this._mainMenu];\n\n    GUI.instance = this;\n  }\n\n  get defaultSettings(): null {\n    return null;\n  }\n\n  Load(): void {\n    // At that point all other modules have been initialized, build the list of their screens\n    for (const module of modules()) {\n      if (!module.settingsScreen) continue;\n\n      this._subscreens.push(new module.settingsScreen(module));\n    }\n\n    this._mainMenu.subscreens = this._subscreens;\n    PreferenceRegisterExtensionSetting({\n      Identifier: 'Themed',\n      ButtonText: getText('infosheet.button_text'),\n      Image: `${PUBLIC_URL}/icons/mod.png`,\n      load: () => {\n        setSubscreen(new MainMenu(this));\n      },\n      run: () => {\n        if (this._currentSubscreen) {\n          MainCanvas.textAlign = 'left';\n          this._currentSubscreen.Run();\n          MainCanvas.textAlign = 'center';\n  \n          this.drawDebug();\n        }\n      },\n      click: () => {\n        if (this._currentSubscreen) {\n          this._currentSubscreen.Click();\n        }\n      },\n      exit: () => {\n        if (this._currentSubscreen) {\n          this._currentSubscreen.Exit();\n        }\n      },\n    });\n  }\n\n  drawDebug() {\n    if (IS_DEVEL) {\n      if (MouseX > 0 || MouseY > 0) {\n        MainCanvas.save();\n        MainCanvas.lineWidth = 1;\n        MainCanvas.strokeStyle = 'red';\n        MainCanvas.beginPath();\n        MainCanvas.moveTo(0, MouseY);\n        MainCanvas.lineTo(2000, MouseY);\n        MainCanvas.moveTo(MouseX, 0);\n        MainCanvas.lineTo(MouseX, 1000);\n        MainCanvas.stroke();\n        MainCanvas.fillStyle = 'black';\n        MainCanvas.strokeStyle = 'white';\n        MainCanvas.fillRect(0, 950, 250, 50);\n        MainCanvas.strokeRect(0, 950, 250, 50);\n        DrawText(`X: ${MouseX} Y: ${MouseY}`, 125, 975, 'white');\n        MainCanvas.restore();\n      }\n    }\n  }\n}\n", "import { GuiSubscreen } from '../Base/BaseSetting';\nimport { getModule } from '../Base/Modules';\nimport { GUI } from '../Base/SettingUtils';\nimport { GlobalModule } from '../Modules/Global';\nimport { getText } from '../Translation';\nimport { MOD_VERSION_CAPTION } from '../Utilities/ModDefinition';\nimport { GuiReset } from './Reset';\nimport { GuiSupport } from './Support';\n\nexport class MainMenu extends GuiSubscreen {\n  subscreens: GuiSubscreen[] = [];\n\n  get name(): string {\n    return 'MainMenu';\n  }\n\n  constructor(module: GUI) {\n    super(module);\n\n    this.subscreens = module.subscreens;\n  }\n\n  Load(): void {\n    if (!GUI.instance?.currentSubscreen) {\n      this.setSubscreen(this);\n      return;\n    }\n\n    super.Load();\n  }\n\n  Run() {\n    const tmp = GuiSubscreen.START_X;\n    MainCanvas.save();\n\n    GuiSubscreen.START_X = 550;\n    MainCanvas.textAlign = 'left';\n\n    DrawCharacter(Player, 50, 50, 0.9, false);\n    DrawText(\n      getText('MainMenu.title').replace('$ModVersion', MOD_VERSION_CAPTION) + '  ' + GuiSupport.getSupporter(),\n      GuiSubscreen.START_X,\n      GuiSubscreen.START_Y - GuiSubscreen.Y_MOD,\n      'Black',\n      '#D7F6E9'\n    );\n    DrawButton(1815, 75, 90, 90, '', 'White', 'Icons/Exit.png');\n\n    MainCanvas.textAlign = 'center';\n    let i = 0;\n    for (const screen of this.subscreens) {\n      const PX = Math.floor(i / 6);\n      const PY = i % 6;\n\n      if (screen.name == 'MainMenu') continue;\n\n      DrawButton(GuiSubscreen.START_X + 430 * PX, 190 + 120 * PY, 450, 90, '', 'White', '', '');\n      DrawImageResize(screen.icon, GuiSubscreen.START_X + 430 * PX + 10, 190 + 120 * PY + 10, 70, 70);\n\n      MainCanvas.textAlign = 'left';\n      DrawTextFit(getText(`mainmenu.button.${screen.name}`), GuiSubscreen.START_X + 100 + 430 * PX, 235 + 120 * PY, 340, 'Black');\n      MainCanvas.textAlign = 'center';\n\n      i++;\n\n      MainCanvas.textAlign = 'left';\n    }\n\n    DrawButton(1500, 730, 405, 80, '', 'IndianRed');\n    DrawImageResize('Icons/ServiceBell.png', 1510, 740, 60, 60);\n    DrawTextFit('Reset', 1580, 770, 320, 'Black');\n\n    DrawButton(1500, 830, 405, 80, '', '#49225C');\n    DrawImageResize('Assets/Female3DCG/Emoticon/Coffee/Icon.png', 1510, 840, 60, 60);\n    DrawTextFit('Support Me\u2764', 1580, 870, 320, 'Black');\n\n    GuiSubscreen.START_X = tmp;\n    MainCanvas.restore();\n  }\n\n  Click() {\n    if (MouseIn(1815, 75, 90, 90)) return this.Exit();\n\n    const tmp = GuiSubscreen.START_X;\n    GuiSubscreen.START_X = 550;\n    let i = 0;\n    for (const screen of this.subscreens) {\n      const PX = Math.floor(i / 6);\n      const PY = i % 6;\n\n      if (screen.name == 'MainMenu') continue;\n\n      if (MouseIn(GuiSubscreen.START_X + 430 * PX, 190 + 120 * PY, 450, 90)) {\n        this.setSubscreen(screen);\n        return;\n      }\n\n      i++;\n    }\n    GuiSubscreen.START_X = tmp;\n\n    if (MouseIn(1500, 730, 405, 80)) this.setSubscreen(new GuiReset(getModule<GlobalModule>('GlobalModule')));\n    if (MouseIn(1500, 830, 400, 80)) this.setSubscreen(new GuiSupport(getModule<GlobalModule>('GlobalModule')));\n  }\n\n  Exit(): void {\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n\n    this.setSubscreen(null);\n    PreferenceSubscreenExtensionsClear();\n  }\n}\n", "import { Setting } from '../../.types/setting';\nimport { BaseSettingsModel } from '../Models/Global';\nimport { ColorsModule } from '../Modules/Colors';\nimport { doRedraw } from '../Modules/GuiRedraw';\nimport { getText } from '../Translation';\nimport { plainColors } from '../Utilities/Color';\nimport { conDebug } from '../Utilities/Console';\nimport { settingsSave } from '../Utilities/Data';\nimport { BaseModule } from './BaseModule';\nimport { getModule, modules } from './Modules';\nimport { SETTING_FUNC_NAMES, SETTING_FUNC_PREFIX, SETTING_NAME_PREFIX, setSubscreen } from './SettingDefinitions';\n\nexport abstract class GuiSubscreen {\n  static START_X: number = 180;\n  static START_Y: number = 205;\n  static X_MOD: number = 950;\n  static Y_MOD: number = 75;\n  static POS_BAK: number = GuiSubscreen.START_X;\n  static TEXT_ALIGN_BAK;\n  readonly module: BaseModule;\n\n  constructor(module: BaseModule) {\n    this.module = module;\n\n    // create each handler for a new preference subscreen\n    SETTING_FUNC_NAMES.forEach((name) => {\n      const fName = SETTING_FUNC_PREFIX + SETTING_NAME_PREFIX + this.name + name;\n      if (typeof (<any>this)[name] === 'function' && typeof (<any>window)[fName] !== 'function')\n        (<any>window)[fName] = () => {\n          (<any>this)[name]();\n        };\n    });\n  }\n\n  get name(): string {\n    return 'UNKNOWN';\n  }\n\n  get icon(): string {\n    return '';\n  }\n\n  get label(): string {\n    return 'UNDEFINED SETTING SCREEN';\n  }\n\n  get message(): string {\n    return PreferenceMessage;\n  }\n\n  set message(message: string) {\n    PreferenceMessage = message;\n  }\n\n  get SubscreenName(): string {\n    return SETTING_NAME_PREFIX + this.constructor.name;\n  }\n\n  setSubscreen(screen: GuiSubscreen | string | null) {\n    return setSubscreen(screen);\n  }\n\n  get settings(): BaseSettingsModel {\n    return this.module.settings as BaseSettingsModel;\n  }\n\n  get multipageStructure(): Setting[][] {\n    return [[]];\n  }\n\n  get structure(): Setting[] {\n    return this.multipageStructure[Math.min(PreferencePageCurrent - 1, this.multipageStructure.length - 1)];\n  }\n\n  getYPos(ix: number) {\n    return GuiSubscreen.START_Y + GuiSubscreen.Y_MOD * (ix % 9);\n  }\n\n  getXPos(ix: number) {\n    return GuiSubscreen.START_X + GuiSubscreen.X_MOD * Math.floor(ix / 9);\n  }\n\n  hideElements() {\n    this.multipageStructure.forEach((item, ix) => {\n      if (ix != PreferencePageCurrent - 1) {\n        item.forEach((setting) => {\n          if (setting.type == 'text' || setting.type == 'number' || setting.type == 'color') this.elementHide(setting.id);\n        });\n      }\n    });\n  }\n\n  Load() {\n    conDebug(`Loading ${PreferenceSubscreen} GUI`);\n    for (const module of modules()) {\n      if (!module.settingsScreen) continue;\n      if (!Object.keys(module.settings).length) module.registerDefaultSettings();\n    }\n    this.multipageStructure.forEach((s) =>\n      s.forEach((item) => {\n        switch (item.type) {\n          case 'text': {\n            const input = ElementCreateInput(item.id, 'text', item.setting(), '255');\n            input.setAttribute('autocomplete', 'off');\n            break;\n          }\n          case 'number':\n            ElementCreateInput(item.id, 'number', item.setting(), '255');\n            break;\n          case 'color': {\n            const elm = ElementCreateInput(item.id, 'color', item.setting());\n            elm.classList.add('tmd-color-picker');\n            break;\n          }\n        }\n      })\n    );\n\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\n  }\n\n  Run() {\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\n    MainCanvas.save();\n\n    GuiSubscreen.START_X = 550;\n    MainCanvas.textAlign = 'left';\n\n    DrawCharacter(Player, 50, 50, 0.9, false);\n    DrawText(getText(`${this.name}.title`), GuiSubscreen.START_X, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, 'Black', '#D7F6E9');\n    DrawButton(1815, 75, 90, 90, '', 'White', 'Icons/Exit.png', 'Main Menu');\n\n    if (this.multipageStructure.length > 1) {\n      MainCanvas.textAlign = 'center';\n      PreferencePageChangeDraw(1595, 75, this.multipageStructure.length);\n      MainCanvas.textAlign = 'left';\n    }\n\n    this.hideElements();\n\n    this.structure.forEach((item, ix) => {\n      switch (item.type) {\n        case 'checkbox':\n          this.drawCheckbox(item.label, item.description, item.setting(), ix, item.disabled);\n          break;\n        case 'text':\n        case 'number':\n        case 'color':\n          this.elementPosition(item.id, item.label, item.description, ix, item.disabled);\n          break;\n        case 'label':\n          this.drawLabel(item.label, item.description, ix);\n          break;\n        case 'button':\n          this.drawBetterButton(item.position, item.size, item.label, item.color, item.image, item.disabled);\n          break;\n      }\n    });\n\n    GuiSubscreen.START_X = GuiSubscreen.POS_BAK;\n    MainCanvas.restore();\n  }\n\n  Click() {\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\n    GuiSubscreen.TEXT_ALIGN_BAK = MainCanvas.textAlign;\n\n    GuiSubscreen.START_X = 550;\n    MainCanvas.textAlign = 'left';\n\n    if (MouseIn(1815, 75, 90, 90)) return this.Exit();\n    if (this.multipageStructure.length > 1) PreferencePageChangeClick(1595, 75, this.multipageStructure.length);\n\n    this.structure.forEach((item, ix) => {\n      switch (item.type) {\n        case 'checkbox':\n          if (MouseIn(this.getXPos(ix), this.getYPos(ix) - 32, 64, 64) && !item.disabled) {\n            item.setSetting(!item.setting());\n          }\n          break;\n        case 'button':\n          if (MouseIn(item.position[0], item.position[1], item.size[0], item.size[1])) item.callback();\n          break;\n      }\n    });\n\n    GuiSubscreen.START_X = GuiSubscreen.POS_BAK;\n    MainCanvas.textAlign = GuiSubscreen.TEXT_ALIGN_BAK;\n  }\n\n  Exit() {\n    this.multipageStructure.forEach((s) =>\n      s.forEach((item) => {\n        switch (item.type) {\n          case 'number':\n            if (!CommonIsNumeric(ElementValue(item.id))) {\n              ElementRemove(item.id);\n            }\n            break;\n          case 'text':\n          case 'color':\n            item.setSetting(ElementValue(item.id));\n            ElementRemove(item.id);\n            break;\n        }\n      })\n    );\n\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n\n    getModule<ColorsModule>('ColorsModule').reloadTheme();\n\n    setSubscreen('MainMenu');\n    settingsSave();\n  }\n\n  Unload() {\n    // Empty\n  }\n\n  tooltip(text: string) {\n    drawTooltip(300, 850, 1400, text, 'left');\n  }\n\n  drawCheckbox(label: string, description: string, value: boolean, order: number, disabled: boolean = false) {\n    const checkboxSize = 64;\n    const labelOffset = checkboxSize + 30;\n    const isHovering = MouseIn(this.getXPos(order) + labelOffset, this.getYPos(order) - 32, 600, checkboxSize);\n    DrawTextFit(getText(label), this.getXPos(order) + labelOffset, this.getYPos(order), 600, isHovering ? 'Red' : 'Black', 'Gray');\n    DrawCheckbox(this.getXPos(order), this.getYPos(order) - 32, checkboxSize, checkboxSize, '', value ?? false, disabled);\n    if (isHovering) this.tooltip(getText(description));\n  }\n\n  drawBetterButton(position: number[], size: number[], label: string, color: string, image: string = '', disabled: boolean = false) {\n    const isHovering = MouseIn(position[0], position[1] - 32, size[0], size[1]);\n    DrawButton(position[0], position[1], size[0], size[1], '', color, '', '', disabled);\n    DrawImageResize(image, position[0] + 10, position[1] + 10, 60, 60);\n    DrawTextFit(getText(label), position[0] + 80, position[1] + 40, 600, isHovering ? 'Red' : 'Black', 'Gray');\n  }\n\n  drawButton(label: string, color: string, order: number, XOffset: number, disabled: boolean = false) {\n    const isHovering = MouseIn(this.getXPos(order) + XOffset, this.getYPos(order) - 32, 200, 64);\n    DrawButton(this.getXPos(order) + XOffset, this.getYPos(order) - 32, 200, 64, '', color, '', '', disabled);\n    DrawTextFit(getText(label), this.getXPos(order) + XOffset + 58, this.getYPos(order), 600, isHovering ? 'Red' : 'Black', 'Gray');\n  }\n\n  elementHide(elementId: string) {\n    ElementPosition(elementId, -999, -999, 1, 1);\n  }\n\n  elementPosition(elementId: string, label: string, description: string, order: number, disabled: boolean = false) {\n    const isHovering = MouseIn(this.getXPos(order) + 450, this.getYPos(order) - 32, 600, 64);\n    DrawTextFit(getText(label), this.getXPos(order) + 450, this.getYPos(order), 600, isHovering ? 'Red' : 'Black', 'Gray');\n    ElementPositionFixed(elementId, this.getXPos(order), this.getYPos(order) - 32, 400, 64);\n    if (disabled) ElementSetAttribute(elementId, 'disabled', 'true');\n    if (!disabled) ElementRemoveAttribute(elementId, 'disabled');\n    if (isHovering) this.tooltip(getText(description));\n  }\n\n  drawLabel(label: string, description: string, order: number) {\n    const isHovering = MouseIn(this.getXPos(order), this.getYPos(order) - 32, 600, 64);\n    DrawTextFit(getText(label), this.getXPos(order), this.getYPos(order), 600, isHovering ? 'Red' : 'Black', 'Gray');\n    if (isHovering) this.tooltip(getText(description));\n  }\n}\n\nfunction drawTooltip(x: number, y: number, width: number, text: string, align: 'left' | 'center' | 'right') {\n  const canvas = MainCanvas;\n  const bak = canvas.textAlign;\n  canvas.textAlign = align;\n  canvas.beginPath();\n  canvas.rect(x, y, width, 65);\n  canvas.fillStyle = doRedraw() ? plainColors.element : '#FFFF88';\n  canvas.fillRect(x, y, width, 65);\n  canvas.fill();\n  canvas.lineWidth = 2;\n  canvas.strokeStyle = doRedraw() ? plainColors.accent : 'black';\n  canvas.stroke();\n  canvas.closePath();\n  DrawTextFit(text, align === 'left' ? x + 3 : x + width / 2, y + 33, width - 6, doRedraw() ? plainColors.text : 'black');\n  canvas.textAlign = bak;\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { hookAppearanceGetPreviewImageColor } from '../Hooks/GuiRedraw/AppearanceGetPreviewImageColor';\nimport { hookDrawBackNextButton } from '../Hooks/GuiRedraw/DrawBackNextButton';\nimport { hookDrawButton } from '../Hooks/GuiRedraw/DrawButton';\nimport { hookDrawButtonHover } from '../Hooks/GuiRedraw/DrawButtonHover';\nimport { hookDrawCheckbox } from '../Hooks/GuiRedraw/DrawCheckbox';\nimport { hookDrawEmptyRect } from '../Hooks/GuiRedraw/DrawEmptyRect';\nimport { hookDrawImageEx } from '../Hooks/GuiRedraw/DrawImageEx';\nimport { hookDrawPreviewBox } from '../Hooks/GuiRedraw/DrawPreviewBox';\nimport { hookDrawRect } from '../Hooks/GuiRedraw/DrawRect';\nimport { hookDrawRoomBackground } from '../Hooks/GuiRedraw/DrawRoomBackground';\nimport { hookDrawText } from '../Hooks/GuiRedraw/DrawText';\nimport { hookDrawTextFit } from '../Hooks/GuiRedraw/DrawTextFit';\nimport { hookDrawTextWrap } from '../Hooks/GuiRedraw/DrawTextWrap';\nimport { PlayerStorage } from '../Utilities/Data';\nimport { patchFunction, unpatchFuntion } from '../Utilities/SDK';\n\nexport const doRedraw = () => {\n  return PlayerStorage()?.GlobalModule?.themedEnabled && PlayerStorage().GlobalModule?.doVanillaGuiOverhaul && CurrentScreen !== 'ClubCard';\n};\n\nexport class GuiRedrawModule extends BaseModule {\n  patched: boolean = false;\n\n  Load(): void {\n    hookDrawRoomBackground();\n    hookDrawButton();\n    hookDrawCheckbox();\n    hookDrawBackNextButton();\n    hookDrawImageEx();\n    hookDrawRect();\n    hookDrawEmptyRect();\n    hookDrawButtonHover();\n    hookDrawPreviewBox();\n    hookAppearanceGetPreviewImageColor();\n    hookDrawTextWrap();\n    hookDrawTextFit();\n    hookDrawText();\n\n    if (doRedraw()) this.patchGui();\n  }\n\n  patchGui() {\n    if (this.patched) return false;\n\n    patchFunction('ChatSearchNormalDraw', {\n      // button patch\n      'DrawButton(X, Y, 630, 85, \"\", (HasBlock && IsFull ? \"#884444\" : HasBlock ? \"#FF9999\" : HasFriends && IsFull ? \"#448855\" : HasFriends ? \"#CFFFCF\" : IsFull ? \"#666\" : \"White\"), null, null, IsFull);':\n        'DrawButton(X, Y, 630, 85, \"\", (HasBlock && IsFull ? \"%searchFullBlock\" : HasBlock ? \"%searchBlock\" : HasFriends && IsFull ? \"%searchFullFriend\" : HasFriends ? \"%searchFriend\" : IsFull ? \"%searchFull\" : \"White\"), null, null, IsFull);',\n      // friend in room patch\n      'DrawTextWrap(ChatSearchMuffle(ChatSearchResult[C].Friends[F].MemberName + \" (\" + ChatSearchResult[C].Friends[F].MemberNumber + \")\"), (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"#FFFF88\", 1);':\n        'DrawTextWrap(ChatSearchMuffle(ChatSearchResult[C].Friends[F].MemberName + \" (\" + ChatSearchResult[C].Friends[F].MemberNumber + \")\"), (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"%friendhint\", 1);',\n      // room friend title patch\n      'DrawTextWrap(TextGet(\"FriendsInRoom\") + \" \" + ChatSearchMuffle(ChatSearchResult[C].DisplayName), (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"#FFFF88\", 1);':\n        'DrawTextWrap(TextGet(\"FriendsInRoom\") + \" \" + ChatSearchMuffle(ChatSearchResult[C].DisplayName), (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"%friendhint\", 1);',\n      // game hint patch\n      'DrawTextWrap(TextGet(\"GameLabel\") + \" \" + TextGet(\"Game\" + ChatSearchResult[C].Game), (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"#9999FF\", 1);': \n        'DrawTextWrap(TextGet(\"GameLabel\") + \" \" + TextGet(\"Game\" + ChatSearchResult[C].Game), (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"%searchGame\", 1);',\n      // block hint patch\n      'DrawTextWrap(Block, (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"#FF9999\", 1);':\n        'DrawTextWrap(Block, (X > 1000) ? 685 : X + 660, ListY, 630, Height, \"black\", \"%searchBlock\", 1);'\n    });\n\n    patchFunction('ChatSearchPermissionDraw', {\n      'DrawRect(X, Y, 630, 85, Hover ? \"green\" : \"lime\");':\n        'DrawRect(X, Y, 630, 85, \"%allowed\");',\n        \n      'DrawRect(X, Y, 630, 85, Hover ? \"red\" : \"pink\");':\n      'DrawRect(X, Y, 630, 85, \"%searchBlock\");'\n    });\n\n    patchFunction('DialogDraw', {\n      'DrawRect(1087 + offset, 550, 225, 275, bgColor);':\n        'DrawRect(1087 + offset, 550, 225, 275, disabled ? \"%disabled\" : (hover ? \"%hover\" : \"%background\"));DrawEmptyRect(1087 + offset, 550, 225, 275, \"%border\");'\n    });\n\n    this.patched = true;\n  }\n\n  unpatchGui() {\n    if (!this.patched) return false;\n\n    unpatchFuntion('ChatSearchNormalDraw');\n    unpatchFuntion('ChatSearchPermissionDraw');\n    unpatchFuntion('DialogDraw');\n\n    this.patched = false;\n  }\n\n  toggleGuiPatches() {\n    if (!doRedraw()) {\n      return this.unpatchGui();\n    } else {\n      return this.patchGui();\n    }\n  }\n}\n", "import { BaseSettingsModel } from '../Models/Global';\nimport { SettingsModel } from '../Models/Settings';\nimport { Subscreen } from './SettingDefinitions';\n\nexport abstract class BaseModule {\n  get settingsScreen(): Subscreen | null {\n    return null;\n  }\n\n  /** Allows changing the subkey for that module settings storage */\n  get settingsStorage(): string | null {\n    return this.constructor.name;\n  }\n\n  get settings(): BaseSettingsModel {\n    if (!this.settingsStorage) return {} as BaseSettingsModel;\n    if (!Player.Themed) {\n      Player.Themed = <SettingsModel>{};\n      this.registerDefaultSettings();\n    } else if (!(<any>Player.Themed)[this.settingsStorage]) this.registerDefaultSettings();\n    return Player.Themed[this.settingsStorage];\n  }\n\n  set settings(val) {\n    if (!Player.Themed) {\n      Player.Themed = <SettingsModel>{};\n      this.registerDefaultSettings();\n    } else if (!(<any>Player.Themed)[this.settingsStorage]) this.registerDefaultSettings();\n    Player.Themed[this.settingsStorage] = val;\n  }\n\n  get enabled(): boolean {\n    if (!Player.Themed.GlobalModule) return false;\n    return (\n      Player.Themed.GlobalModule.themedEnabled &&\n      this.settings.themedEnabled &&\n      (ServerPlayerIsInChatRoom() || (CurrentModule == 'Room' && CurrentScreen == 'Crafting'))\n    );\n  }\n\n  Init() {\n    this.registerDefaultSettings();\n  }\n\n  registerDefaultSettings(): void {\n    const storage = this.settingsStorage;\n    const defaults = this.defaultSettings;\n    if (!storage || !defaults) return;\n\n    Player.Themed[storage] = Object.assign(defaults, Player.Themed[storage] ?? {});\n  }\n\n  get defaultSettings(): BaseSettingsModel | null {\n    return null;\n  }\n\n  Load() { }\n\n  Run() {\n    // Empty\n  }\n\n  Unload() {\n    // Empty\n  }\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors, specialColors } from '../../Utilities/Color';\nimport { hookFunction, HookPriority, ModuleCategory } from '../../Utilities/SDK';\n\nexport function hookAppearanceGetPreviewImageColor() {\n  hookFunction(\n    'AppearanceGetPreviewImageColor',\n    HookPriority.Observe,\n    (args: Parameters<typeof AppearanceGetPreviewImageColor>, next: (args: Parameters<typeof AppearanceGetPreviewImageColor>) => ReturnType<typeof AppearanceGetPreviewImageColor>) => {\n      if (!doRedraw()) return next(args);\n\n      const [c, item, hover] = args;\n\n      if (DialogMenuMode === 'permissions' && c.IsPlayer()) {\n        let permission = 'allowed';\n        if (InventoryIsPermissionBlocked(c, item.Asset.Name, item.Asset.Group.Name)) permission = 'blocked';\n        else if (InventoryIsPermissionLimited(c, item.Asset.Name, item.Asset.Group.Name)) permission = 'limited';\n        return item.Worn ? specialColors.equipped[hover ? 1 : 0] : specialColors[permission][hover ? 1 : 0];\n      } else {\n        const unusable = item.SortOrder.startsWith(DialogSortOrder.Unusable.toString())\n          || item.SortOrder.startsWith(DialogSortOrder.TargetFavoriteUnusable.toString())\n          || item.SortOrder.startsWith(DialogSortOrder.PlayerFavoriteUnusable.toString());\n        const blocked = item.SortOrder.startsWith(DialogSortOrder.Blocked.toString());\n        const limited = item.Icons.includes('AllowedLimited');\n        if (blocked) return specialColors.blocked[hover ? 1 : 0];\n        else if (item.Worn) return specialColors.equipped[hover ? 1 : 0];\n        else if ((item.Craft != null) && (item.Craft.Name != null)) return specialColors.crafted[hover ? 1 : 0];\n        else if (unusable) return plainColors.elementDisabled;\n        else if (limited) return specialColors.limited[hover ? 1 : 0];\n        else return hover ? plainColors.elementHover : plainColors.element;\n      }\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import Color from 'color';\nimport { BaseColorsModel } from '../Models/Colors';\n\nexport const plainColors: BaseColorsModel = {\n  main: '',\n  element: '',\n  elementHover: '',\n  elementDisabled: '',\n  elementHint: '',\n  text: '',\n  textShadow: '',\n  accent: '',\n  accentHover: '',\n  accentDisabled: '',\n};\n\nexport const specialColors = {\n  equipped: ['', ''],\n  crafted: ['', ''],\n  blocked: ['', ''],\n  limited: ['', ''],\n  allowed: ['', ''],\n  roomFriend: ['', ''],\n  roomBlocked: ['', ''],\n  roomGame: ['', ''],\n};\n\nexport const _Color = {\n  getComputed: CommonMemoize((color: string): string => {\n    const div = document.createElement('div');\n    div.style.color = color;\n    document.body.appendChild(div);\n    const computedColor = getComputedStyle(div).color;\n    div.remove();\n\n    return computedColor;\n  }),\n\n  getHexComputed: CommonMemoize((color: string): string => {\n    return Color(_Color.getComputed(color)).hex();\n  }),\n\n  composeRoot() {\n    const colorSettings = Player.Themed.ColorsModule;\n    const globalSettings = Player.Themed.GlobalModule;\n\n    Object.keys(colorSettings.special).forEach((key) => {\n      const clr = Color(colorSettings.special[key]);\n      specialColors[key] = [clr.hex(), clr.lighten(0.2).hex()];\n    });\n\n    if (globalSettings.doUseAdvancedColoring) {\n      Object.keys(colorSettings.base).forEach(key => {\n        plainColors[key] = colorSettings.base[key];\n      });\n    } else {\n      const primaryColor = _Color.getHexComputed(colorSettings.base.main);\n      const elementColor = Color(primaryColor).lighten(0.2).hex();\n      const accentColor = _Color.getHexComputed(colorSettings.base.accent);\n      const textColor = _Color.getHexComputed(colorSettings.base.text);\n\n      plainColors.main = primaryColor;\n      plainColors.element = elementColor;\n      plainColors.elementHover = Color(elementColor).lighten(0.2).hex();\n      plainColors.elementDisabled = Color(elementColor).darken(0.2).hex();\n      plainColors.elementHint = Color(elementColor).lighten(0.2).hex();\n      plainColors.text = textColor;\n      plainColors.accent = accentColor;\n      plainColors.accentHover = Color(accentColor).lighten(0.2).hex();\n      plainColors.accentDisabled = Color(accentColor).darken(0.2).hex();\n    }\n    plainColors.textShadow = _Color.getHexComputed('rgba(0,0,0,0.5)');\n  },\n};\n", "import bcMod from 'bondage-club-mod-sdk';\nimport { conErr } from './Console';\nimport { FullModName, MOD_VERSION_CAPTION, ModName, ModRepository } from './ModDefinition';\n\nexport const SDK = bcMod.registerMod(\n  {\n    name: ModName,\n    fullName: FullModName,\n    version: MOD_VERSION_CAPTION,\n    repository: ModRepository\n  },\n  {\n    allowReplace: false\n  }\n);\n\nexport enum HookPriority {\n  Observe = 0,\n  AddBehavior = 1,\n  ModifyBehavior = 5,\n  OverrideBehavior = 10,\n  Top = 100\n}\n\nexport enum ModuleCategory {\n  Global = 0,\n  Colors = 1,\n  Integration = 2,\n  GuiRedraw = 3,\n  Version = 4,\n  Markdown = 5\n}\n\nconst patchedFunctions: Map<string, PatchedFunctionData> = new Map();\n\nfunction initPatchableFunction(target: string): PatchedFunctionData {\n  let result = patchedFunctions.get(target);\n  if (!result) {\n    result = {\n      name: target,\n      hooks: []\n    };\n    patchedFunctions.set(target, result);\n  }\n  return result;\n}\n\nexport function patchFunction(target: string, patches: Record<string, string>): void {\n  SDK.patchFunction(target, patches);\n}\n\nexport function unpatchFuntion(target: string) {\n  SDK.removePatches(target);\n}\n\nexport function hookFunction(\n  target: string,\n  priority: number,\n  hook: import('../../.types/bcmodsdk').PatchHook,\n  module: ModuleCategory | null = null\n): () => void {\n  const data = initPatchableFunction(target);\n\n  if (data.hooks.some((h) => h.hook === hook)) {\n    conErr(`Duplicate hook for \"${target}\"`, hook);\n    return () => null;\n  }\n\n  const removeCallback = SDK.hookFunction(target, priority, hook as any);\n\n  data.hooks.push({\n    hook,\n    priority,\n    module,\n    removeCallback\n  });\n  data.hooks.sort((a, b) => b.priority - a.priority);\n  return removeCallback;\n}\n\nexport function removeHookByModule(target: string, module: ModuleCategory): boolean {\n  const data = initPatchableFunction(target);\n\n  for (let i = data.hooks.length - 1; i >= 0; i--) {\n    if (data.hooks[i].module === module) {\n      data.hooks[i].removeCallback();\n      data.hooks.splice(i, 1);\n    }\n  }\n\n  return true;\n}\n\nexport function removeAllHooksByModule(module: ModuleCategory): boolean {\n  for (const data of patchedFunctions.values()) {\n    for (let i = data.hooks.length - 1; i >= 0; i--) {\n      if (data.hooks[i].module === module) {\n        data.hooks[i].removeCallback();\n        data.hooks.splice(i, 1);\n      }\n    }\n  }\n\n  return true;\n}\n", "const STYLES = {\n  INFO: 'color: #32CCCC',\n  LOG: 'color: #CCCC32',\n  DEBUG: 'color: #9E4BCF'\n};\n\nconst cmdPrefix = 'Themed';\n\nexport function conInfo(...args: any[]) {\n  if (typeof args[0] === 'string') console.info(`%c${cmdPrefix}: ${args[0]}`, STYLES.INFO, ...args.slice(1));\n  else console.info(`%c${cmdPrefix}:`, STYLES.LOG, ...args);\n}\n\nexport function conLog(...args: any[]) {\n  if (typeof args[0] === 'string') console.log(`%c${cmdPrefix}: ${args[0]}`, STYLES.LOG, ...args.slice(1));\n  else console.log(`%c${cmdPrefix}:`, STYLES.LOG, ...args);\n}\n\nexport function conWarn(...args: any[]) {\n  if (typeof args[0] === 'string') console.warn(`%c${cmdPrefix}: ${args[0]}`, STYLES.LOG, ...args.slice(1));\n  else console.warn(`%c${cmdPrefix}: `, STYLES.LOG, ...args);\n}\n\nexport function conErr(...args: any[]) {\n  if (typeof args[0] === 'string') console.error(`%c${cmdPrefix}: ${args[0]}`, STYLES.LOG, ...args.slice(1));\n  else console.error(`%c${cmdPrefix}:`, STYLES.LOG, ...args);\n}\n\nexport function conDebug(...args: any[]) {\n  if (IS_DEVEL) {\n    if (typeof args[0] === 'string') console.debug(`%c${cmdPrefix}: ${args[0]}`, STYLES.DEBUG, ...args.slice(1));\n    else console.debug(`%c${cmdPrefix}:`, STYLES.LOG, ...args);\n  }\n}\n", "export const ModName = 'Themed';\nexport const FullModName = 'BC Themed';\nexport const ModRepository = 'https://github.com/dDeepLb/Themed-BC';\nexport const MOD_VERSION_CAPTION = IS_DEVEL ? `${MOD_VERSION} - ${VERSION_HASH}` : MOD_VERSION;\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { hookFunction, HookPriority, ModuleCategory } from '../../Utilities/SDK';\n\nexport function hookDrawBackNextButton() {\n  hookFunction(\n    'DrawBackNextButton',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawBackNextButton>, next: (args: Parameters<typeof DrawBackNextButton>) => ReturnType<typeof DrawBackNextButton>) => {\n      if (!doRedraw()) return next(args);\n\n      const [Left, Top, Width, Height, Label, Color, Image, , , Disabled] = args;\n      let [, , , , , , , BackText, NextText, , ArrowWidth] = args;\n\n      if (ArrowWidth == null || ArrowWidth > Width / 2) ArrowWidth = Width / 2;\n      const LeftSplit = Left + ArrowWidth;\n      const RightSplit = Left + Width - ArrowWidth;\n\n      ControllerAddActiveArea(Left, Top);\n      ControllerAddActiveArea(Left + Width - ArrowWidth, Top);\n\n      MainCanvas.save();\n      MainCanvas.textAlign = 'center';\n\n      MainCanvas.beginPath();\n      MainCanvas.rect(Left, Top, Width, Height);\n      MainCanvas.fillStyle = plainColors.element;\n      MainCanvas.fillRect(Left, Top, Width, Height);\n      if (MouseIn(Left, Top, Width, Height) && !CommonIsMobile && !Disabled) {\n        MainCanvas.fillStyle = plainColors.elementHover;\n        if (MouseX > RightSplit) {\n          MainCanvas.fillRect(RightSplit, Top, ArrowWidth, Height);\n        } else if (MouseX <= LeftSplit) {\n          MainCanvas.fillRect(Left, Top, ArrowWidth, Height);\n        } else {\n          MainCanvas.fillRect(Left + ArrowWidth, Top, Width - ArrowWidth * 2, Height);\n        }\n      } else if (CommonIsMobile && ArrowWidth < Width / 2 && !Disabled) {\n        MainCanvas.fillStyle = plainColors.elementDisabled;\n        MainCanvas.fillRect(Left, Top, ArrowWidth, Height);\n        MainCanvas.fillRect(RightSplit, Top, ArrowWidth, Height);\n      }\n      MainCanvas.lineWidth = 2;\n      MainCanvas.strokeStyle = plainColors.accent;\n      MainCanvas.stroke();\n      MainCanvas.closePath();\n\n      DrawTextFit(Label, Left + Width / 2, Top + Height / 2 + 1, CommonIsMobile ? Width - 6 : Width - 36, Color);\n      DrawTextFit(Label, Left + Width / 2, Top + (Height / 2) + 1, (CommonIsMobile) ? Width - 6 : Width - 36, 'Black');\n\n      if (Image != null && Image != '') {\n        DrawImage(Image, Left + 2, Top + 2);\n      }\n\n      ControllerAddActiveArea(Left + Width / 2, Top);\n\n      MainCanvas.beginPath();\n      MainCanvas.fillStyle = 'Black';\n      MainCanvas.moveTo(Left + 15, Top + Height / 5);\n      MainCanvas.lineTo(Left + 5, Top + Height / 2);\n      MainCanvas.lineTo(Left + 15, Top + Height - Height / 5);\n      MainCanvas.stroke();\n      MainCanvas.closePath();\n\n      MainCanvas.beginPath();\n      MainCanvas.fillStyle = 'Black';\n      MainCanvas.moveTo(Left + Width - 15, Top + Height / 5);\n      MainCanvas.lineTo(Left + Width - 5, Top + Height / 2);\n      MainCanvas.lineTo(Left + Width - 15, Top + Height - Height / 5);\n      MainCanvas.stroke();\n      MainCanvas.closePath();\n\n      MainCanvas.restore();\n\n      if (CommonIsMobile) return;\n      if (BackText == null) BackText = () => 'MISSING VALUE FOR: BACK TEXT';\n      if (NextText == null) NextText = () => 'MISSING VALUE FOR: NEXT TEXT';\n      if (MouseX >= Left && MouseX <= Left + Width && MouseY >= Top && MouseY <= Top + Height && !Disabled)\n        DrawHoverElements.push(() => {\n          DrawButtonHover(Left, Top, Width, Height, MouseX < LeftSplit ? BackText() : MouseX >= RightSplit ? NextText() : '');\n        });\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { _Color, plainColors } from '../../Utilities/Color';\nimport { drawButtonRect } from '../../Utilities/Drawing';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawButton() {\n  hookFunction(\n    'DrawButton',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawButton>, next: (args: Parameters<typeof DrawButton>) => ReturnType<typeof DrawButton>) => {\n      if (!doRedraw()) return next(args);\n\n      const [x, y, width, height, label, color, image, hoveringText, isDisabled] = args;\n      const isHovering = MouseHovering(x, y, width, height);\n\n      ControllerAddActiveArea(x, y);\n\n      switch (_Color.getHexComputed(color).toLowerCase()) {\n        case '#ffffff':\n        case '#dddddd':\n        case '#eeeeee':\n          drawButtonRect(\n            x,\n            y,\n            width,\n            height,\n            plainColors.element,\n            plainColors.elementHover,\n            plainColors.elementDisabled,\n            plainColors.accent,\n            plainColors.accentHover,\n            plainColors.accentDisabled,\n            isHovering,\n            isDisabled\n          );\n          break;\n\n        default:\n          drawButtonRect(\n            x,\n            y,\n            width,\n            height,\n            color,\n            color,\n            color,\n            plainColors.accent,\n            plainColors.accentHover,\n            plainColors.accentDisabled,\n            isHovering,\n            isDisabled\n          );\n          break;\n      }\n\n      DrawTextFit(label, x + width / 2, y + height / 2 + 1, width - 4, plainColors.text);\n\n      if (image != null && image != '') {\n        DrawImage(image, x + 2, y + 2);\n      }\n\n      if (hoveringText != null && isHovering) {\n        DrawHoverElements.push(() => DrawButtonHover(x, y, width, height, hoveringText));\n      }\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "export const _Image = {\n  doNotColorizeImageIncludes: [\n    'Assets/Female3DCG/',\n    'Backgrounds/',\n    'Icons/Struggle/',\n    'Icons/LARP/',\n    'Icons/MagicBattle/',\n    'Screens/',\n    'http'\n  ],\n\n  doColorizeImageIncludes: [\n    PUBLIC_URL\n  ],\n\n  doNotColorizeImages: [\n    'Icons/Accept.png',\n    'Icons/Activity.png',\n    'Icons/Arousal.png',\n    'Icons/Audio.png',\n    'Icons/BlindToggle2.png',\n    'Icons/Cancel.png',\n    'Icons/Cell.png',\n    'Icons/Checked.png',\n    'Icons/ClubCard.png',\n    'Icons/Controller.png',\n    'Icons/Crafting.png',\n    'Icons/Exit.png',\n    'Icons/Explore.png',\n    'Icons/Gavel.png',\n    'Icons/Gender.png',\n    'Icons/Infiltration.png',\n    'Icons/Lock.png',\n    'Icons/LockMenu.png',\n    'Icons/MagicSchool.png',\n    'Icons/Online.png',\n    'Icons/Platform.png',\n    'Icons/Poker.png',\n    'Icons/Search.png',\n    'Icons/Security.png',\n    'Icons/ServiceBell.png',\n    'Icons/Title.png',\n    'Icons/Use.png',\n    'Icons/WinkNone.png',\n    'Icons/Color.png',\n    'Icons/ColorChange.png',\n    'Icons/ColorChangeMulti.png',\n    'Icons/Small/ColorBlocked.png',\n    'Icons/Small/ColorChange.png',\n    'Icons/Small/ColorChangeMulti.png',\n    'Icons/Small/Naked.png',\n    'Icons/Small/Use.png',\n    'Icons/Small/YouTube.png',\n  ],\n\n  doColorizeImages: [\n  ],\n\n  doDrawImage(source: string) {\n    if (!source) return false;\n    if (typeof source !== 'string') return false;\n    let doDraw = true;\n\n    if (doDraw) {\n      const includesFolder = _Image.doNotColorizeImageIncludes.some(prefix => source.startsWith(prefix));\n      const includesFile = _Image.doNotColorizeImages.includes(source);\n      if (includesFolder || includesFile) {\n        doDraw = false;\n      }\n    }\n\n    if (!doDraw) {\n      const includesFolder = _Image.doColorizeImageIncludes.some(prefix => source.startsWith(prefix));\n      const includesFile = _Image.doColorizeImages.includes(source);\n      if (includesFolder || includesFile) {\n        doDraw = true;\n      }\n    }\n\n    return doDraw;\n  },\n};\n\nexport function drawRect(x: number, y: number, width: number, height: number, backgroundColor: string, borderColor: string) {\n  DrawRect(x, y, width, height, backgroundColor);\n  DrawEmptyRect(x, y, width, height, borderColor, 2);\n}\n\nexport function drawButtonRect(\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  backgroundColor: string,\n  backgroundHoverColor: string,\n  backgroundDisabledColor: string,\n  borderColor: string,\n  borderHoverColor: string,\n  borderDisabledColor: string,\n  isHovering: boolean,\n  disabled: boolean\n) {\n  if (!isHovering && !disabled) drawRect(x, y, width, height, backgroundColor, borderColor);\n  else if (isHovering && !disabled) drawRect(x, y, width, height, backgroundHoverColor, borderHoverColor);\n  else if (disabled) drawRect(x, y, width, height, backgroundDisabledColor, borderDisabledColor);\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { drawRect } from '../../Utilities/Drawing';\nimport { hookFunction, HookPriority, ModuleCategory } from '../../Utilities/SDK';\n\nexport function hookDrawButtonHover() {\n  hookFunction(\n    'DrawButtonHover',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawButtonHover>, next: (args: Parameters<typeof DrawButtonHover>) => ReturnType<typeof DrawButtonHover>) => {\n      if (!doRedraw()) return next(args);\n\n      const [, , Width, Height, HoveringText] = args;\n      let [Left, Top] = args;\n\n      if (HoveringText == null || HoveringText == '') return next(args);\n\n      Left = MouseX > 1000 ? Left - 475 : Left + Width + 25;\n      Top = Top + (Height - 65) / 2;\n      MainCanvas.save();\n      MainCanvas.textAlign = 'center';\n      drawRect(Left, Top, 450, 65, plainColors.elementHint, plainColors.accent);\n      DrawTextFit(HoveringText, Left + 225, Top + 33, 444, 'Black');\n      MainCanvas.restore();\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawCheckbox() {\n  hookFunction(\n    'DrawCheckbox',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawCheckbox>, next: (args: Parameters<typeof DrawCheckbox>) => ReturnType<typeof DrawCheckbox>) => {\n      if (!doRedraw()) return next(args);\n\n      const [Left, Top, Width, Height, Text, IsChecked, Disabled = false, TextColor = 'Black', CheckImage = 'Icons/Checked.png'] = args;\n\n      DrawText(Text, Left + 100, Top + 33, TextColor, '');\n      DrawButton(Left, Top, Width, Height, '', 'White', IsChecked ? CheckImage : '', null, Disabled);\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { _Color, plainColors } from '../../Utilities/Color';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawEmptyRect() {\n  hookFunction(\n    'DrawEmptyRect',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawEmptyRect>, next: (args: Parameters<typeof DrawEmptyRect>) => ReturnType<typeof DrawEmptyRect>) => {\n      if (!doRedraw()) return next(args);\n\n      const [Left, Top, Width, Height, Color, Thickness] = args;\n\n      const drawEmptyRect = (color: string) => {\n        MainCanvas.beginPath();\n        MainCanvas.rect(Left, Top, Width, Height);\n        MainCanvas.lineWidth = Thickness;\n        MainCanvas.strokeStyle = color;\n        MainCanvas.stroke();\n      };\n\n      if (Color?.startsWith('%')) {\n        switch (Color.substring(1).toLowerCase()) {\n          case 'border':\n            drawEmptyRect(plainColors.accent);\n            break;\n\n          default:\n            next(args);\n            break;\n        }\n      } else {\n        switch (_Color.getHexComputed(Color).toLowerCase()) {\n          case '#ffffff':\n          case '#dddddd':\n          case '#000000':\n            drawEmptyRect(plainColors.accent);\n            break;\n\n          default:\n            next(args);\n            break;\n        }\n      }\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { _Image } from '../../Utilities/Drawing';\nimport { hookFunction, HookPriority, ModuleCategory } from '../../Utilities/SDK';\n\nexport function hookDrawImageEx() {\n  hookFunction(\n    'DrawImageEx',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawImageEx>, next: (args: Parameters<typeof DrawImageEx>) => ReturnType<typeof DrawImageEx>) => {\n      if (!doRedraw()) return next(args);\n      if (typeof args[0] !== 'string') return next(args);\n      if (!_Image.doDrawImage(args[0])) return next(args);\n\n      const [Source, Canvas, X, Y, Options] = args;\n      Options.HexColor = plainColors.accent;\n      Options.FullAlpha = true;\n\n      next([Source, Canvas, X, Y, Options]);\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { hookFunction, HookPriority, ModuleCategory } from '../../Utilities/SDK';\n\nexport function hookDrawPreviewBox() {\n  hookFunction(\n    'DrawPreviewBox',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawPreviewBox>, next: (args: Parameters<typeof DrawPreviewBox>) => ReturnType<typeof DrawPreviewBox>) => {\n      if (!doRedraw()) return next(args);\n\n      const [X, Y, Path, Description, Options] = args;\n\n      const { Vibrating, Icons, Disabled } = Options || {};\n      let { Foreground, Background, Width, Height } = Options || {};\n      Width = Width || DrawAssetPreviewDefaultWidth;\n      Height = Height || DrawAssetPreviewDefaultHeight;\n\n      const Padding = 2;\n      const TextGutter = Description ? 44 : 0;\n\n      Foreground = plainColors.text;\n      Background = Background || plainColors.element;\n      const hover = MouseHovering(X, Y, Width, Height);\n      if (hover) Background = Background || plainColors.elementHover;\n      if (Disabled) Background = Background || plainColors.elementDisabled;\n\n      let ImageX = X + Padding;\n      let ImageY = Y + Padding;\n      let ImageWidth = Width;\n      let ImageHeight = Height - TextGutter;\n\n      if (ImageWidth > ImageHeight) {\n        const Ratio = ImageHeight / ImageWidth;\n        ImageWidth *= Ratio;\n        ImageX += (Width - ImageWidth) / 2;\n      } else if (ImageWidth < ImageHeight) {\n        const Ratio = ImageWidth / ImageHeight;\n        ImageHeight *= Ratio;\n        ImageY += (Height - ImageHeight - TextGutter) / 2;\n      }\n\n      ImageWidth -= 2 * Padding;\n      ImageHeight -= 2 * Padding;\n\n      if (Vibrating) {\n        ImageX += 1 + Math.floor(Math.random() * 3);\n        ImageY += 1 + Math.floor(Math.random() * 3);\n      }\n\n      DrawRect(X, Y, Width, Height, Background);\n      ControllerAddActiveArea(X, Y);\n      DrawEmptyRect(X, Y, Width, Height, hover ? plainColors.accentHover : plainColors.accent);\n      if (Path !== '') DrawImageResize(Path, ImageX, ImageY, ImageWidth, ImageHeight);\n      DrawPreviewIcons(Icons, X, Y);\n      if (Description) DrawTextFit(Description, X + Width / 2, Y + Height - 25, Width - 2 * Padding, Foreground);\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import Color from 'color';\nimport { doRedraw } from '../../Modules/GuiRedraw';\nimport { _Color, plainColors, specialColors } from '../../Utilities/Color';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawRect() {\n  hookFunction(\n    'DrawRect',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawRect>, next: (args: Parameters<typeof DrawRect>) => ReturnType<typeof DrawRect>) => {\n      if (!doRedraw()) return next(args);\n\n      const [Left, Top, Width, Height, color] = args;\n\n      const drawRect = (color: string) => {\n        next([Left, Top, Width, Height, color]);\n      };\n\n      const hover = MouseIn(Left, Top, Width, Height) ? 1 : 0;\n\n      if (color?.startsWith('%')) {\n        switch (color.substring(1)) {\n          case 'disabled':\n            drawRect(plainColors.elementDisabled);\n            break;\n\n          case 'hover':\n            drawRect(plainColors.elementHover);\n            break;\n\n          case 'background':\n            drawRect(plainColors.element);\n            break;\n\n          case 'friendhint':\n            drawRect(plainColors.elementHint);\n            break;\n\n          case 'searchFullBlock':\n            drawRect(Color(specialColors.blocked[hover]).mix(Color(specialColors.roomBlocked[hover]), 0.5).hex());\n            break;\n\n          case 'searchBlock':\n            drawRect(specialColors.roomBlocked[hover]);\n            break;\n\n          case 'searchFullFriend':\n            drawRect(Color(specialColors.roomFriend[hover]).mix(Color(plainColors.elementDisabled), 0.5).hex());\n            break;\n\n          case 'searchFriend':\n            drawRect(specialColors.roomFriend[hover]);\n            break;\n\n          case 'searchFull':\n            drawRect(plainColors.elementDisabled);\n            break;\n\n          case 'searchGame':\n            drawRect(specialColors.roomGame[hover]);\n            break;\n\n          case 'allowed':\n            drawRect(specialColors.allowed[hover]);\n            break;\n\n          default:\n            next(args);\n            break;\n        }\n      } else {\n        switch (_Color.getHexComputed(color).toLowerCase()) {\n          case '#eeeeee':\n          case '#dddddd':\n          case '#cccccc':\n          case '#ffffff':\n          case '#ffff88':\n          case '#ffffff88':\n          case '#ffffffcc':\n          case '#d7f6e9': // LSCG Version Tooltip\n            drawRect(plainColors.element);\n            break;\n\n          default:\n            next(args);\n            break;\n        }\n      }\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { PlayerStorage } from '../../Utilities/Data';\nimport { hookFunction, HookPriority, ModuleCategory } from '../../Utilities/SDK';\n\nexport function hookDrawRoomBackground() {\n  hookFunction(\n    'DrawRoomBackground',\n    HookPriority.Observe,\n    ([URL, ...args]: Parameters<typeof DrawRoomBackground>, next: (args: Parameters<typeof DrawRoomBackground>) => ReturnType<typeof DrawRoomBackground>) => {\n      if (!doRedraw()) return next([URL, ...args]);\n\n      if (URL.includes('Sheet.jpg')) {\n        if (PlayerStorage().GlobalModule.doUseFlatColor) {\n          DrawRect(0, 0, 2000, 1000, plainColors.main);\n        } else {\n          next([URL, ...args]);\n          MainCanvas.save();\n          MainCanvas.globalCompositeOperation = 'multiply';\n          DrawRect(0, 0, 2000, 1000, plainColors.main);\n          MainCanvas.restore();\n        }\n      } else {\n        next([URL, ...args]);\n      }\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import { SettingsModel } from '../Models/Settings';\nimport { ModName } from './ModDefinition';\nimport { _String } from './String';\n\nexport const PlayerStorage = () => (typeof Player?.[ModName] === 'object' ? CommonCloneDeep(Player?.[ModName]) : undefined);\nexport const ExtensionStorage = () => Player.ExtensionSettings[ModName];\n\nexport function settingsLoad() {\n  if (ExtensionStorage()) {\n    Player[ModName] = JSON.parse(LZString.decompressFromBase64(ExtensionStorage())) as SettingsModel;\n  } else if (Player.OnlineSettings[ModName]) {\n    Player[ModName] = JSON.parse(LZString.decompressFromBase64(Player.OnlineSettings[ModName]));\n\n    delete Player.OnlineSettings[ModName];\n    window.ServerAccountUpdate.QueueData({ OnlineSettings: Player.OnlineSettings });\n  } else {\n    Player[ModName] = <SettingsModel>{};\n  }\n}\n\nexport function settingsSave() {\n  if (!ExtensionStorage()) Player.ExtensionSettings[ModName] = '';\n  const Data: SettingsModel = {\n    Version: PlayerStorage().Version,\n    GlobalModule: PlayerStorage().GlobalModule,\n    ColorsModule: PlayerStorage().ColorsModule,\n    IntegrationModule: PlayerStorage().IntegrationModule,\n    ProfilesModule: PlayerStorage().ProfilesModule\n  };\n  Player.ExtensionSettings[ModName] = _String.encode(Data);\n  ServerPlayerExtensionSettingsSync(ModName);\n}\n\nexport function settingsReset() {\n  Player[ModName] = <SettingsModel>{};\n  settingsSave();\n}\n", "export class _String {\n  static encode(string: string | object) {\n    return LZString.compressToBase64(JSON.stringify(string));\n  }\n\n  static decode(string: string | undefined) {\n    const d = LZString.decompressFromBase64(string as string);\n    let data = {};\n\n    try {\n      const decoded = JSON.parse(d as string);\n      data = decoded;\n    } catch {\n      /* ... */\n    }\n    if (data) return data;\n  }\n}\n", "import Color from 'color';\nimport { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawText() {\n  hookFunction(\n    'DrawText',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawText>, next: (args: Parameters<typeof DrawText>) => ReturnType<typeof DrawText>) => {\n      if (!doRedraw()) return next(args);\n      if (!args[0]) return next(args);\n      if (!args[3]) return next(args);\n      \n\n      if (Color(args[3].toLowerCase()).hex() === '#000000') {\n        args[3] = plainColors.text;\n        args[4] = '';\n      } else {\n        args[4] = '';\n      }\n\n      next(args);\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import Color from 'color';\nimport { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawTextFit() {\n  hookFunction(\n    'DrawTextFit',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawTextFit>, next: (args: Parameters<typeof DrawTextFit>) => ReturnType<typeof DrawTextFit>) => {\n      if (!doRedraw()) return next(args);\n      if (!args[0]) return next(args);\n      if (!args[4]) return next(args);\n      \n      if (Color(args[4].toLowerCase()).hex() === '#000000') {\n        args[4] = plainColors.text;\n      }\n\n      return next(args);\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "import Color from 'color';\nimport { doRedraw } from '../../Modules/GuiRedraw';\nimport { plainColors } from '../../Utilities/Color';\nimport { drawRect } from '../../Utilities/Drawing';\nimport { HookPriority, ModuleCategory, hookFunction } from '../../Utilities/SDK';\n\nexport function hookDrawTextWrap() {\n  hookFunction(\n    'DrawTextWrap',\n    HookPriority.Observe,\n    (args: Parameters<typeof DrawTextWrap>, next: (args: Parameters<typeof DrawTextWrap>) => ReturnType<typeof DrawTextWrap>) => {\n      if (!doRedraw()) return next(args);\n      if (!args[0]) return next(args);\n      if (!args[5]) return next(args);\n      \n\n      const [Text, X, , Width, Height, ForeColor, BackColor, MaxLine, LineSpacing = 23] = args;\n      let [, , Y, , ,] = args;\n      const isHovering = MouseHovering(X, Y, Width, Height);\n\n      if (!Text) return;\n\n      ControllerAddActiveArea(X, Y);\n\n      if (BackColor != null) {\n        if (!isHovering) {\n          drawRect(X, Y, Width, Height, BackColor, plainColors.accent);\n        } else {\n          drawRect(X, Y, Width, Height, plainColors.elementHover, plainColors.accentHover);\n        }\n      }\n\n      let TextSize;\n      if (MaxLine != null) {\n        TextSize = MainCanvas.font;\n        GetWrapTextSize(Text, Width, MaxLine);\n      }\n\n      MainCanvas.fillStyle = Color(ForeColor.toLowerCase()).hex() === '#000000' ? plainColors.text : ForeColor;\n      if (MainCanvas.measureText(Text).width > Width) {\n        const words = fragmentText(Text, Width);\n        let line = '';\n\n        let LineCount = 1;\n        for (let n = 0; n < words.length; n++) {\n          const testLine = line + words[n] + ' ';\n          if (MainCanvas.measureText(testLine).width > Width && n > 0) {\n            line = words[n] + ' ';\n            LineCount++;\n          } else line = testLine;\n        }\n\n        line = '';\n        Y = Y - (LineCount - 1) * LineSpacing + Height / 2;\n        for (let n = 0; n < words.length; n++) {\n          const testLine = line + words[n] + ' ';\n          if (MainCanvas.measureText(testLine).width > Width && n > 0) {\n            MainCanvas.fillText(line, X + Width / 2, Y);\n            line = words[n] + ' ';\n            Y += LineSpacing * 2;\n          } else {\n            line = testLine;\n          }\n        }\n        MainCanvas.fillText(line, X + Width / 2, Y);\n      } else MainCanvas.fillText(Text, X + Width / 2, Y + Height / 2);\n\n      if (MaxLine != null && TextSize != null) MainCanvas.font = TextSize;\n    },\n    ModuleCategory.GuiRedraw\n  );\n}\n", "export class Localization {\n  private static Translation = new Object();\n  private static FallbackTranslation = new Object();\n\n  static async load() {\n    const lang = TranslationLanguage.toLowerCase();\n    this.Translation = await Localization.fetchLanguageFile(lang);\n    if (lang == 'en') {\n      return;\n    }\n    this.FallbackTranslation = await Localization.fetchLanguageFile('en');\n  }\n\n  static getText(srcTag: string) {\n    return this.Translation[srcTag] || this.FallbackTranslation?.[srcTag] || srcTag || '';\n  }\n\n  private static async fetchLanguageFile(lang: string) {\n    const response = await fetch(`${PUBLIC_URL}/i18n/${lang}.lang`);\n\n    if (lang != 'en' && !response.ok) {\n      return Localization.fetchLanguageFile('en');\n    }\n    const langFileContent = await response.text();\n\n    return this.parseLanguageFile(langFileContent);\n  }\n\n  private static parseLanguageFile(content) {\n    const translations = {};\n    const lines = content.split('\\n');\n\n    for (const line of lines) {\n      // Ignore empty lines and comments\n      if (line.trim() === '' || line.trim().startsWith('#')) {\n        continue;\n      }\n\n      const [key, value] = line.split('=');\n      translations[key.trim()] = value.trim();\n    }\n\n    return translations;\n  }\n}\n\nexport const getText = (string: string): string => Localization.getText(string);\n", "import { BaseModule } from './BaseModule';\nimport { GuiSubscreen } from './BaseSetting';\nimport { GUI } from './SettingUtils';\n\nexport const SETTING_FUNC_PREFIX: string = 'PreferenceSubscreen';\nexport const SETTING_NAME_PREFIX: string = 'Themed';\nexport const SETTING_FUNC_NAMES: string[] = ['Load', 'Run', 'Click', 'Unload', 'Exit'];\n\nexport type Subscreen = new (module: BaseModule) => GuiSubscreen;\n\nexport function getCurrentSubscreen(): GuiSubscreen | null {\n  return GUI.instance && GUI.instance.currentSubscreen;\n}\n\nexport function setSubscreen(subscreen: GuiSubscreen | string | null): GuiSubscreen | null {\n  if (!GUI.instance) {\n    throw new Error('Attempt to set subscreen before init');\n  }\n  GUI.instance.currentSubscreen = subscreen;\n  return GUI.instance.currentSubscreen;\n}\n", "import { GuiSubscreen } from '../Base/BaseSetting';\nimport { modules } from '../Base/Modules';\nimport { getText } from '../Translation';\nimport { _Color } from '../Utilities/Color';\nimport { settingsReset } from '../Utilities/Data';\nimport { BcStyle } from '../Utilities/Style';\n\nexport class GuiReset extends GuiSubscreen {\n  get name(): string {\n    return 'Reset';\n  }\n\n  get icon(): string {\n    return '';\n  }\n\n  private allowedConfirmTime: number | null = 0;\n\n  Load() {\n    this.allowedConfirmTime = Date.now() + 5_000;\n    super.Load();\n  }\n\n  Run() {\n    GuiSubscreen.POS_BAK = GuiSubscreen.START_X;\n    GuiSubscreen.START_X = 180;\n\n    MainCanvas.save();\n    MainCanvas.textAlign = 'center';\n\n    DrawText(getText('reset.label.perma_reset_of_mod_data'), 1000, 125, 'Black');\n\n    DrawText(getText('reset.label.warning'), 1000, 225, 'Black', 'Black');\n    DrawText(getText('reset.label.if_u_confirm_perma_reset'), 1000, 325, 'Black');\n\n    DrawText(getText('reset.label.youll_able_to_use_mod'), 1000, 550, 'Gray');\n\n    DrawText(getText('reset.label.action_cannot_be_undone'), 1000, 625, 'Red', 'Black');\n\n    const now = Date.now();\n    if (now < this.allowedConfirmTime) {\n      DrawButton(\n        300,\n        720,\n        200,\n        80,\n        `${getText('reset.button.confirm')} (${Math.floor((this.allowedConfirmTime - now) / 1000)})`,\n        '#ddd',\n        undefined,\n        undefined,\n        true\n      );\n    } else {\n      DrawButton(300, 720, 200, 80, getText('reset.button.confirm'), 'White');\n    }\n\n    DrawButton(1520, 720, 200, 80, getText('reset.button.cancel'), 'White');\n\n    MainCanvas.restore();\n  }\n\n  Click() {\n    if (this.allowedConfirmTime === null) return;\n\n    if (MouseIn(300, 720, 200, 80) && Date.now() >= this.allowedConfirmTime) return this.Confirm();\n    if (MouseIn(1520, 720, 200, 80)) return this.Exit();\n  }\n\n  Confirm() {\n    this.allowedConfirmTime = null;\n\n    settingsReset();\n    \n    for (const module of modules()) {\n      module.registerDefaultSettings();\n    }\n\n    _Color.composeRoot();\n    BcStyle.reloadAll();\n\n    this.setSubscreen(null);\n    PreferenceSubscreenExtensionsClear();\n  }\n}\n", "import { IntegrationSettingsModel } from '../Models/Integration';\nimport { plainColors, specialColors } from './Color';\nimport { PlayerStorage } from './Data';\n\ntype styles = {\n  [key in keyof Omit<IntegrationSettingsModel, 'themedEnabled' | 'MBS'>]: string;\n};\nconst styles: styles = {\n  inputs: '',\n  chat: '',\n  friendList: '',\n  friendListBlur: '',\n  scrollbar: '',\n  selection: '',\n  WCE: '',\n  FUSAM: '',\n  TTS: '',\n};\n\nexport const Style = {\n  injectInline(styleId: string, styleSource: string) {\n    const isStyleLoaded = document.getElementById(styleId);\n\n    if (isStyleLoaded) return;\n\n    const styleElement = document.createElement('style');\n    styleElement.id = styleId;\n    styleElement.appendChild(document.createTextNode(styleSource));\n    document.head.appendChild(styleElement);\n  },\n\n  injectEmbed(styleId: string, styleLink: string) {\n    const isStyleLoaded = document.getElementById(styleId);\n\n    if (isStyleLoaded) return;\n\n    const styleElement = document.createElement('link');\n    styleElement.id = styleId;\n    styleElement.rel = 'stylesheet';\n    styleElement.href = styleLink;\n    document.head.appendChild(styleElement);\n  },\n\n  eject(id: string) {\n    const style = document.getElementById(id);\n    if (!style) return;\n\n    style.remove();\n  },\n\n  reload(styleId: string, styleSource: string) {\n    Style.eject(styleId);\n    Style.injectInline(styleId, styleSource);\n  },\n\n  async fetch(link: string) {\n    return fetch(link).then((res) => res.text());\n  }\n};\n\nexport const BcStyle = {\n  injectAll() {\n    const isEnabled = PlayerStorage().GlobalModule.themedEnabled;\n\n    Style.injectInline('root', composeRoot());\n    Style.injectEmbed('themed', `${PUBLIC_URL}/styles/themed.css`);\n    \n    if (!isEnabled) return;\n\n    const styleIDs = Object.keys(styles) as (keyof typeof styles)[];\n    styleIDs.forEach((id) => {\n      if (!PlayerStorage().IntegrationModule[id]) return;\n      Style.injectEmbed(id, `${PUBLIC_URL}/styles/${id}.css`);\n    });\n  },\n\n  ejectAll() {\n    Style.eject('root');\n    Style.eject('themed');\n\n    const styleIDs = Object.keys(styles) as (keyof typeof styles)[];\n    styleIDs.forEach((id) => {\n      Style.eject(id);\n    });\n  },\n\n  reloadAll() {\n    BcStyle.ejectAll();\n    BcStyle.injectAll();\n  }\n};\n\nexport function composeRoot() {\n  let genedColors = '';\n\n  Object.keys(plainColors).forEach((key) => {\n    genedColors += `--${key}: ${plainColors[key]};\\n\\t`;\n  });\n  Object.keys(specialColors).forEach((key) => {\n    genedColors += `--${key}: ${specialColors[key][0]};\\n\\t`;\n    genedColors += `--${key}Hover: ${specialColors[key][1]};\\n\\t`;\n  });\n  \n  return /*css*/ `\n    :root {\n      ${genedColors}\n    }\n    `.replace(/\\t+|\\n\\s*/g, '\\t');\n}\n", "import { Button, Setting } from '../../.types/setting';\nimport { GuiSubscreen } from '../Base/BaseSetting';\nimport { getText } from '../Translation';\n\nexport class GuiSupport extends GuiSubscreen {\n  private static thankYouList: string[] = ['Ellena', 'weboos', 'Jamie'];\n  private static thankYouNext = 0;\n  private static thankYou = '';\n\n  get name(): string {\n    return 'Support';\n  }\n\n  get structure(): Setting[] {\n    return [\n      <Button>{\n        type: 'button',\n        position: [GuiSubscreen.START_X, GuiSubscreen.START_Y],\n        size: [405, 80],\n        label: 'support.button.ko-fi',\n        color: '#49225C',\n        image: 'https://storage.ko-fi.com/cdn/nav-logo-stroke.png',\n        disabled: false,\n        callback() {\n          window.open('https://ko-fi.com/monikka_bc', '_blank');\n        }\n      },\n      <Button>{\n        type: 'button',\n        position: [GuiSubscreen.START_X, GuiSubscreen.START_Y + GuiSubscreen.Y_MOD + 20],\n        size: [405, 80],\n        label: 'support.button.patreon',\n        color: '#49225C',\n        image: 'https://c5.patreon.com/external/favicon/rebrand/favicon-32.png?v=af5597c2ef',\n        disabled: false,\n        callback() {\n          window.open('https://patreon.com/monikka_bc', '_blank');\n        }\n      }\n    ];\n  }\n\n  static getSupporter() {\n    if (GuiSupport.thankYouNext < CommonTime()) GuiSupport.doNextThankYou();\n    return `${getText('support.other.thankyou')}, ${GuiSupport.thankYou}`;\n  }\n\n  static doNextThankYou() {\n    if (GuiSupport.thankYou && GuiSupport.thankYouList.length < 2) return;\n    GuiSupport.thankYou = CommonRandomItemFromList(GuiSupport.thankYou, GuiSupport.thankYouList);\n    GuiSupport.thankYouNext = CommonTime() + 4000;\n  }\n\n  Load() {\n    GuiSupport.doNextThankYou();\n\n    ElementCreateDiv('ThemedGratitude');\n    const elm = document.getElementById('ThemedGratitude');\n    ElementContent('ThemedGratitude', gratitudeHtml);\n\n    const font =\n      MainCanvas.canvas.clientWidth <= MainCanvas.canvas.clientHeight * 2\n        ? MainCanvas.canvas.clientWidth / 50\n        : MainCanvas.canvas.clientHeight / 25;\n\n    Object.assign(elm.style, {\n      fontFamily: CommonGetFontName(),\n      fontSize: font + 'px'\n    });\n\n    super.Load();\n  }\n\n  Run() {\n    super.Run();\n\n    const tmp = GuiSubscreen.START_X;\n    GuiSubscreen.START_X = 550;\n\n    DrawText(GuiSupport.getSupporter(), GuiSubscreen.START_X + 300, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, 'Black', '#D7F6E9');\n\n    GuiSubscreen.START_X = tmp;\n  }\n\n  Click() {\n    super.Click();\n  }\n\n  Exit() {\n    ElementRemove('ThemedGratitude');\n    super.Exit();\n  }\n}\n\nconst gratitudeHtml = /*html*/ `\n<h1 class=\"ThemedH\">Dear Supporters!</h1>\n<p class=\"ThemedP\">\n  I want to take a moment to express my heartfelt gratitude for considering supporting me. Your willingness to stand by\n  my side in this creative journey means the world to me, and I am truly humbled by your generosity.\n</p>\n<p class=\"ThemedP\">\n  Your support goes far beyond the financial contributions; it represents belief in my work and a shared passion for\n  what I do. Your encouragement inspires me to continue developing.\n</p>\n<p class=\"ThemedP\">\n  Your support not only helps me sustain and grow as a developer, but also enables me to dedicate more time and\n  resources to producing high-quality mods. It allows me to explore new ideas, enhance my skills, and bring even more\n  meaningful and enjoyable content to you.\n</p>\n<p class=\"ThemedP\">Thank you all~</p>\n<p class=\"ThemedP\">With love, Monikka\u2665</p>\n`;\n", "import { BaseMigrator } from './BaseMigrator';\n\nexport class V140Migrator extends BaseMigrator {\n  get MigrationVersion(): string {\n    return '1.4.0';\n  }\n\n  Migrate(): boolean {\n    const colorsData = Player.Themed.ColorsModule;\n    const integrationsData = Player.Themed.IntegrationModule;\n\n    if (colorsData) {\n      if (Player.Themed.ColorsModule['primaryColor']) {\n        Player.Themed.ColorsModule.base.main = Player.Themed.ColorsModule['primaryColor'];\n        delete Player.Themed.ColorsModule['primaryColor'];\n      }\n\n      if (Player.Themed.ColorsModule['accentColor']) {\n        Player.Themed.ColorsModule.base.accent = Player.Themed.ColorsModule['accentColor'];\n        delete Player.Themed.ColorsModule['accentColor'];\n      }\n\n      if (Player.Themed.ColorsModule['textColor']) {\n        Player.Themed.ColorsModule.base.text = Player.Themed.ColorsModule['textColor'];\n        delete Player.Themed.ColorsModule['textColor'];\n      }\n    }\n\n    if (integrationsData) {\n      if (Player.Themed.IntegrationModule['BC']) {\n        Player.Themed.IntegrationModule.inputs = Player.Themed.IntegrationModule['BC'];\n        delete Player.Themed.IntegrationModule['BC'];\n      }\n      \n      if (Player.Themed.IntegrationModule['BC_Chat']) {\n        Player.Themed.IntegrationModule.chat = Player.Themed.IntegrationModule['BC_Chat'];\n        delete Player.Themed.IntegrationModule['BC_Chat'];\n      }\n      \n      if (Player.Themed.IntegrationModule['BC_FriendList']) {\n        Player.Themed.IntegrationModule.friendList = Player.Themed.IntegrationModule['BC_FriendList'];\n        delete Player.Themed.IntegrationModule['BC_FriendList'];\n      }\n      \n      if (Player.Themed.IntegrationModule['BC_Other']) {\n        Player.Themed.IntegrationModule.scrollbar = Player.Themed.IntegrationModule['BC_Other'];\n        Player.Themed.IntegrationModule.selection = Player.Themed.IntegrationModule['BC_Other'];\n        delete Player.Themed.IntegrationModule['BC_Other'];\n      }\n      \n      if (Player.Themed.IntegrationModule['FBC']) {\n        Player.Themed.IntegrationModule.WCE = Player.Themed.IntegrationModule['FBC'];\n        delete Player.Themed.IntegrationModule['FBC'];\n      }\n    }\n\n    return true;\n  }\n}\n", "export abstract class BaseMigrator {\n  abstract get MigrationVersion(): string;\n  abstract Migrate(): boolean;\n}\n", "import Color from 'color';\nimport { BaseModule } from '../Base/BaseModule';\nimport { getModule } from '../Base/Modules';\nimport { Subscreen } from '../Base/SettingDefinitions';\nimport { ColorsSettingsModel } from '../Models/Colors';\nimport { GuiColors } from '../Screens/Colors';\nimport { _Color } from '../Utilities/Color';\nimport { changeModColors } from '../Utilities/Integration';\nimport { BcStyle } from '../Utilities/Style';\nimport { GuiRedrawModule } from './GuiRedraw';\n\nconst primaryColor = Color('#202020');\nconst elementColor = primaryColor.lighten(0.2);\nconst accentColor = Color('#440171');\nconst textColor = Color('#cccccc');\nconst specialColors = {\n  equipped: Color('#3575b5'),\n  crafted: Color('#aaa235'),\n  blocked: Color('#870c0c'),\n  limited: Color('#9d6600'),\n  allowed: Color('#008800'),\n  roomFriend: Color('#008800'),\n  roomBlocked: Color('#870c0c'),\n  roomGame: Color('#3575b5'),\n};\n\nexport class ColorsModule extends BaseModule {\n  get settingsScreen(): Subscreen | null {\n    return GuiColors;\n  }\n\n  get settings(): ColorsSettingsModel {\n    return super.settings as ColorsSettingsModel;\n  }\n\n  set settings(val) {\n    super.settings = val;\n  }\n\n  get defaultSettings() {\n    return <ColorsSettingsModel>{\n      base: {\n        main: primaryColor.hex(),\n        element: elementColor.hex(),\n        elementHover: elementColor.lighten(0.3).hex(),\n        elementDisabled: elementColor.darken(0.2).hex(),\n        elementHint: elementColor.lighten(0.3).hex(),\n        accent: accentColor.hex(),\n        accentHover: accentColor.lighten(0.3).hex(),\n        accentDisabled: accentColor.darken(0.2).hex(),\n        text: textColor.hex(),\n      },\n      special: {\n        equipped: specialColors.equipped.hex(),\n        crafted: specialColors.crafted.hex(),\n        blocked: specialColors.blocked.hex(),\n        limited: specialColors.limited.hex(),\n        allowed: specialColors.allowed.hex(),\n        roomFriend: specialColors.roomFriend.hex(),\n        roomBlocked: specialColors.roomBlocked.hex(),\n        roomGame: specialColors.roomGame.hex(),\n      },\n    };\n  }\n\n  Load(): void {\n  }\n\n  reloadTheme(): void {\n    _Color.composeRoot();\n    BcStyle.reloadAll();\n    changeModColors();\n    getModule<GuiRedrawModule>('GuiRedrawModule').toggleGuiPatches();\n  }\n}\n", "import { Input } from '../../.types/setting';\nimport { GuiSubscreen } from '../Base/BaseSetting';\nimport { getModule } from '../Base/Modules';\nimport { BaseColorsModel, ColorsSettingsModel } from '../Models/Colors';\nimport { ColorsModule } from '../Modules/Colors';\nimport { getText } from '../Translation';\n\nexport class GuiColors extends GuiSubscreen {\n  get name(): string {\n    return 'Colors';\n  }\n\n  get icon(): string {\n    return 'Icons/ColorChange.png';\n  }\n\n  get settings(): ColorsSettingsModel {\n    return super.settings as ColorsSettingsModel;\n  }\n\n  get multipageStructure(): Input[][] {\n    const defaultSettings = getModule<ColorsModule>('ColorsModule').defaultSettings;\n    const isBaseMode = !Player.Themed.GlobalModule.doUseAdvancedColoring;\n    const baseModeKey = (key: keyof BaseColorsModel) => ['main', 'accent', 'text'].includes(key);\n\n    return [Object.entries(this.settings.base).map(([key, value]: [keyof BaseColorsModel, string]) => ({\n      type: 'color',\n      id: key,\n      label: `colors.setting.${key}.name`,\n      description: `colors.setting.${key}.desc`,\n      setting: () => value ?? defaultSettings.base[key],\n      setSetting: (val) => (this.settings.base[key] = val),\n      disabled: isBaseMode && !baseModeKey(key)\n    })).sort((a, b) => (a.disabled ? 1 : 0) - (b.disabled ? 1 : 0)) as Input[],\n    Object.entries(this.settings.special).map(([key, value]) => ({\n      type: 'color',\n      id: key,\n      label: `colors.setting.${key}.name`,\n      description: `colors.setting.${key}.desc`,\n      setting: () => value ?? defaultSettings.special[key],\n      setSetting: (val) => (this.settings.special[key] = val)\n    }))];\n  }\n\n  Run(): void {\n    DrawButton(1495, 75, 90, 90, '', 'White', 'Icons/Swap.png', getText('colors.button.change_input_type'));\n    super.Run();\n  }\n\n  Click(): void {\n    if (MouseIn(1495, 75, 90, 90)) {\n      this.multipageStructure.forEach((page) => {\n        page.forEach((elm) => {\n          if (elm.type == 'color' || elm.type == 'text') {\n            const e = document.getElementById(elm.id);\n            const elementType = e.getAttribute('type');\n\n            if (elementType == 'color') {\n              e.setAttribute('type', 'text');\n            } else {\n              e.setAttribute('type', 'color');\n            }\n          }\n        });\n      });\n      return;\n    }\n\n    super.Click();\n  }\n}\n", "import { doRedraw } from '../Modules/GuiRedraw';\nimport { plainColors } from './Color';\nimport { PlayerStorage } from './Data';\n\nexport function changeModColors() {\n  if (doRedraw()) {\n    changeBctColors();\n    changeMbsColors();\n  } else {\n    resetBctColors();\n    resetMbsColors();\n  }\n}\n\nfunction changeBctColors() {\n  if (Player.BCT) {\n    BCT_API.HintBackColor = plainColors.element;\n    BCT_API.HintBorderColor = plainColors.accent;\n    BCT_API.HintForeColor = plainColors.text;\n  }\n}\n\nfunction resetBctColors() {\n  if (Player.BCT) {\n    BCT_API.HintBackColor = 'yellow';\n    BCT_API.HintBorderColor = 'black';\n    BCT_API.HintForeColor = 'black';\n  }\n}\n\nfunction changeMbsColors() {\n  if (typeof mbs !== 'undefined' && mbs.API_VERSION.major === 1 && mbs.API_VERSION.minor >= 3) {\n    if (!PlayerStorage().IntegrationModule.MBS) return;\n    return mbs.css.setStyle({\n      backgroundColor: plainColors.main,\n      buttonColor: plainColors.element,\n      buttonHoverColor: plainColors.elementHover,\n      borderColor: plainColors.accent,\n      tooltipColor: plainColors.elementHint,\n      textColor: plainColors.text\n    });\n  }\n}\n\nfunction resetMbsColors() {\n  if (typeof mbs !== 'undefined' && mbs.API_VERSION.major === 1 && mbs.API_VERSION.minor >= 3) {\n    if (!PlayerStorage().IntegrationModule.MBS)\n      mbs.css.setStyle({\n        backgroundColor: mbs.css.DEFAULT_STYLE.backgroundColor,\n        buttonColor: mbs.css.DEFAULT_STYLE.buttonColor,\n        buttonHoverColor: mbs.css.DEFAULT_STYLE.buttonHoverColor,\n        borderColor: mbs.css.DEFAULT_STYLE.borderColor,\n        tooltipColor: mbs.css.DEFAULT_STYLE.tooltipColor,\n        textColor: mbs.css.DEFAULT_STYLE.textColor\n      });\n  }\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { getModule } from '../Base/Modules';\nimport { ShareModule } from './Share';\n\nexport class CommandsModule extends BaseModule {\n  Load(): void {\n    CommandCombine([\n      {\n        Tag: 'share-theme',\n        Description: ': Shares your theme with other people that have Themed installed!',\n        Action() {\n          getModule<ShareModule>('ShareModule').share();\n        }\n      }\n    ]);\n  }\n\n  Run(): void { }\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { Subscreen } from '../Base/SettingDefinitions';\nimport { GlobalSettingsModel } from '../Models/Global';\nimport { GuiGlobal } from '../Screens/Global';\nimport { changeModColors } from '../Utilities/Integration';\nimport { hookFunction, HookPriority, ModuleCategory } from '../Utilities/SDK';\n\nexport class GlobalModule extends BaseModule {\n  private static transparentCharacters: number[] = [];\n\n  get settingsScreen(): Subscreen | null {\n    return GuiGlobal;\n  }\n\n  get settings(): GlobalSettingsModel {\n    return super.settings as GlobalSettingsModel;\n  }\n\n  set settings(val) {\n    super.settings = val;\n  }\n\n  get defaultSettings() {\n    return <GlobalSettingsModel>{\n      themedEnabled: true,\n      doVanillaGuiOverhaul: true,\n      doUseAdvancedColoring: false,\n      doUseFlatColor: false,\n      doShowLocaleTime: true,\n      doIndicateCharacterAbsence: true,\n      doShowNewVersionMessage: true\n    };\n  }\n\n  Load(): void {\n    changeModColors();\n\n    hookFunction(\n      'ChatRoomCurrentTime',\n      HookPriority.Observe,\n      (args, next) => {\n        if (!this.settings.doShowLocaleTime) return next(args);\n\n        const currentTime = new Date(Date.now());\n\n        return currentTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n      },\n      ModuleCategory.Global\n    );\n\n    hookFunction(\n      'DialogDraw',\n      HookPriority.Observe,\n      (args: Parameters<typeof DialogDraw>, next: (args: Parameters<typeof DialogDraw>) => ReturnType<typeof DialogDraw>) => {\n        if (!this.settings.themedEnabled) return next(args);\n        if (!this.settings.doIndicateCharacterAbsence) return next(args);\n        if (!(CurrentScreen == 'ChatRoom')) return next(args);\n        if (!CurrentCharacter) return next(args);\n\n        next(args);\n\n        if (CurrentCharacter === null) return;\n        if (CurrentCharacter.IsPlayer()) return;\n        if (ChatRoomCharacter.includes(CurrentCharacter)) {\n          if (GlobalModule.transparentCharacters.includes(CurrentCharacter.MemberNumber)) {\n            CurrentCharacter.Canvas.getContext('2d').globalAlpha = 1.0;\n            CurrentCharacter.CanvasBlink.getContext('2d').globalAlpha = 1.0;\n            CharacterAppearanceBuildCanvas(CurrentCharacter);\n            GlobalModule.transparentCharacters.filter((x) => x !== CurrentCharacter.MemberNumber);\n          }\n        } else {\n          MainCanvas.save();\n          MainCanvas.globalCompositeOperation = 'multiply';\n          MainCanvas.beginPath();\n          MainCanvas.fillStyle = 'gray';\n          MainCanvas.fillRect(500, 0, 500, 1000);\n          MainCanvas.fill();\n          MainCanvas.restore();\n\n          if (!GlobalModule.transparentCharacters.includes(CurrentCharacter.MemberNumber)) {\n            CurrentCharacter.Canvas.getContext('2d').globalAlpha = 0.2;\n            CurrentCharacter.CanvasBlink.getContext('2d').globalAlpha = 0.2;\n            CharacterAppearanceBuildCanvas(CurrentCharacter);\n            GlobalModule.transparentCharacters.push(CurrentCharacter.MemberNumber);\n          }\n\n          DrawImageEx('Icons/Warning.svg', MainCanvas, 500 + 125, 125, { Width: 250, Height: 250, HexColor: '#ff0000', FullAlpha: true });\n        }\n      },\n      ModuleCategory.Global\n    );\n\n    hookFunction(\n      'AppearanceRun',\n      HookPriority.Observe,\n      (args: Parameters<typeof AppearanceRun>, next: (args: Parameters<typeof AppearanceRun>) => ReturnType<typeof AppearanceRun>) => {\n        if (!this.settings.themedEnabled) return next(args);\n        if (!this.settings.doIndicateCharacterAbsence) return next(args);\n        if (!(CurrentScreen == 'Appearance')) return next(args);\n        if (!CharacterAppearanceSelection) return next(args);\n\n        next(args);\n\n        if (CharacterAppearanceSelection === null) return;\n        if (CharacterAppearanceSelection.IsPlayer()) return;\n        if (ChatRoomCharacter.includes(CharacterAppearanceSelection)) {\n          if (GlobalModule.transparentCharacters.includes(CharacterAppearanceSelection.MemberNumber)) {\n            CharacterAppearanceSelection.Canvas.getContext('2d').globalAlpha = 1.0;\n            CharacterAppearanceSelection.CanvasBlink.getContext('2d').globalAlpha = 1.0;\n            CharacterAppearanceBuildCanvas(CharacterAppearanceSelection);\n            GlobalModule.transparentCharacters.filter((x) => x !== CharacterAppearanceSelection.MemberNumber);\n          }\n        } else {\n          MainCanvas.save();\n          MainCanvas.globalCompositeOperation = 'multiply';\n          MainCanvas.beginPath();\n          MainCanvas.fillStyle = 'gray';\n          MainCanvas.fillRect(660, 0, 500, 1000);\n          MainCanvas.fill();\n          MainCanvas.restore();\n\n          if (!GlobalModule.transparentCharacters.includes(CharacterAppearanceSelection.MemberNumber)) {\n            CharacterAppearanceSelection.Canvas.getContext('2d').globalAlpha = 0.2;\n            CharacterAppearanceSelection.CanvasBlink.getContext('2d').globalAlpha = 0.2;\n            CharacterAppearanceBuildCanvas(CharacterAppearanceSelection);\n            GlobalModule.transparentCharacters.push(CharacterAppearanceSelection.MemberNumber);\n          }\n\n          DrawImageEx('Icons/Warning.svg', MainCanvas, 660 + 125, 125, { Width: 250, Height: 250, HexColor: '#ff0000' });\n        }\n      },\n      ModuleCategory.Global\n    );\n\n    hookFunction(\n      'ChatRoomSync',\n      HookPriority.Observe,\n      (args: Parameters<typeof ChatRoomSync>, next: (args: Parameters<typeof ChatRoomSync>) => ReturnType<typeof ChatRoomSync>) => {\n        Character.filter(character => GlobalModule.transparentCharacters?.includes(character.MemberNumber));\n\n        return next(args);\n      },\n      ModuleCategory.Global\n    );\n  }\n\n  Run(): void { }\n}\n", "import { Setting } from '../../.types/setting';\nimport { GuiSubscreen } from '../Base/BaseSetting';\nimport { getModule } from '../Base/Modules';\nimport { GlobalSettingsModel } from '../Models/Global';\nimport { GlobalModule } from '../Modules/Global';\n\nexport class GuiGlobal extends GuiSubscreen {\n  get name(): string {\n    return 'Global';\n  }\n\n  get icon(): string {\n    return 'Icons/Preference.png';\n  }\n\n  get settings(): GlobalSettingsModel {\n    return super.settings as GlobalSettingsModel;\n  }\n\n  get structure(): Setting[] {\n    const defaultSettings = getModule<GlobalModule>('GlobalModule').defaultSettings;\n\n    return Object.entries(this.settings).map(([key, value]) => ({\n      type: 'checkbox',\n      label: `settings.setting.${key}.name`,\n      description: `settings.setting.${key}.desc`,\n      setting: () => value ?? defaultSettings[key],\n      setSetting: (val) => (this.settings[key] = val)\n    }));\n  }\n\n  Load(): void {\n    super.Load();\n  }\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { Subscreen } from '../Base/SettingDefinitions';\nimport { IntegrationSettingsModel } from '../Models/Integration';\nimport { GuiIntegration } from '../Screens/Integration';\nimport { hookFunction, HookPriority, ModuleCategory } from '../Utilities/SDK';\nimport { BcStyle } from '../Utilities/Style';\n\nexport class IntegrationModule extends BaseModule {\n  get settingsScreen(): Subscreen | null {\n    return GuiIntegration;\n  }\n\n  get settings(): IntegrationSettingsModel {\n    return super.settings as IntegrationSettingsModel;\n  }\n\n  set settings(val) {\n    super.settings = val;\n  }\n\n  get defaultSettings() {\n    return <IntegrationSettingsModel>{\n      inputs: true,\n      chat: true,\n      friendList: true,\n      friendListBlur: false,\n      scrollbar: true,\n      selection: true,\n      WCE: true,\n      FUSAM: true,\n      TTS: true,\n      MBS: true\n    };\n  }\n\n  Load(): void {\n    hookFunction(\n      'ChatRoomSync',\n      HookPriority.Observe,\n      (args, next) => {\n        next(args);\n        BcStyle.reloadAll();\n      },\n      ModuleCategory.Integration\n    );\n  }\n}\n", "import { Setting } from '../../.types/setting';\nimport { GuiSubscreen } from '../Base/BaseSetting';\nimport { getModule } from '../Base/Modules';\nimport { IntegrationSettingsModel } from '../Models/Integration';\nimport { IntegrationModule } from '../Modules/Integration';\n\nexport class GuiIntegration extends GuiSubscreen {\n  get name(): string {\n    return 'Integration';\n  }\n\n  get icon(): string {\n    return 'Icons/Scripts.png';\n  }\n\n  get settings(): IntegrationSettingsModel {\n    return super.settings as IntegrationSettingsModel;\n  }\n\n  get structure(): Setting[] {\n    const defaultSettings = getModule<IntegrationModule>('IntegrationModule').defaultSettings;\n\n    return Object.entries(this.settings).map(([key, value]) => ({\n      type: 'checkbox',\n      label: `integration.setting.${key}.name`,\n      description: `integration.setting.${key}.desc`,\n      setting: () => value ?? defaultSettings[key],\n      setSetting: (val) => (this.settings[key] = val)\n    }));\n  }\n\n  Load(): void {\n    super.Load();\n  }\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { getModule } from '../Base/Modules';\nimport { Subscreen } from '../Base/SettingDefinitions';\nimport { ProfileSaveModel, ProfilesSettingsModel } from '../Models/Profiles';\nimport { GuiProfiles } from '../Screens/Profiles';\nimport { PlayerStorage } from '../Utilities/Data';\nimport { ModName } from '../Utilities/ModDefinition';\nimport { deepMergeMatchingProperties } from '../Utilities/Other';\nimport { ColorsModule } from './Colors';\nimport { GlobalModule } from './Global';\nimport { IntegrationModule } from './Integration';\n\nexport class ProfilesModule extends BaseModule {\n  get settings(): ProfilesSettingsModel {\n    return super.settings as ProfilesSettingsModel;\n  }\n\n  get settingsScreen(): Subscreen | null {\n    return GuiProfiles;\n  }\n\n  get defaultSettings() {\n    return <ProfilesSettingsModel>{};\n  }\n\n  Load(): void {\n    const profileDefaults: ProfileSaveModel = {\n      GlobalModule: getModule<GlobalModule>('GlobalModule').defaultSettings,\n      ColorsModule: getModule<ColorsModule>('ColorsModule').defaultSettings,\n      IntegrationModule: getModule<IntegrationModule>('IntegrationModule').defaultSettings\n    };\n    \n    for (let i = 0; i < 3; i++) {\n      const profileIndex = i + 1;\n      if (!PlayerStorage()?.ProfilesModule?.[profileIndex] || Object.keys(PlayerStorage()?.ProfilesModule?.[profileIndex]).length === 0) {\n        Player[ModName].ProfilesModule[profileIndex] = {\n          data: <ProfileSaveModel>{},\n          name: ''\n        };\n      }\n      \n      if (Object.keys(Player[ModName].ProfilesModule[profileIndex].data).length > 0) Player[ModName].ProfilesModule[profileIndex].data = deepMergeMatchingProperties<ProfileSaveModel>(profileDefaults, Player[ModName].ProfilesModule[profileIndex].data);\n    }\n  }\n}\n", "import { GuiSubscreen } from '../Base/BaseSetting';\nimport { getModule } from '../Base/Modules';\nimport { ProfileEntryModel, ProfileNames, ProfileSaveModel, ProfilesSettingsModel } from '../Models/Profiles';\nimport { ColorsModule } from '../Modules/Colors';\nimport { getText } from '../Translation';\nimport { conWarn } from '../Utilities/Console';\nimport { PlayerStorage } from '../Utilities/Data';\nimport { ModName } from '../Utilities/ModDefinition';\n\nexport class GuiProfiles extends GuiSubscreen {\n  private PreferenceText = '';\n  private ProfileNames: ProfileNames = ['', '', ''];\n\n  get name(): string {\n    return 'Profiles';\n  }\n\n  get icon(): string {\n    return 'Icons/Title.png';\n  }\n\n  get settings(): ProfilesSettingsModel {\n    return super.settings as ProfilesSettingsModel;\n  }\n\n  tmpGlbl = GuiSubscreen.START_X;\n\n  Load() {\n    super.Load();\n\n    for (let i = 0; i < 3; i++) {\n      const profileIndex = i + 1;\n      this.ProfileNames[i] = PlayerStorage()?.ProfilesModule?.[profileIndex]?.name ?? '';\n    }\n\n    CharacterAppearanceForceUpCharacter = Player.MemberNumber ?? -1;\n  }\n\n  Run() {\n    MainCanvas.save();\n    super.Run();\n    MainCanvas.textAlign = 'left';\n\n    for (let i = 0; i < 3; i++) {\n      const profileIndex = i + 1;\n\n      if (this.ProfileNames[i] === '')\n        DrawText(getText('profiles.text.profile') + ` ${profileIndex}`, this.getXPos(profileIndex), this.getYPos(profileIndex), 'Black', 'Gray');\n      if (this.ProfileNames[i] !== '')\n        DrawText(this.ProfileNames[i] as string, this.getXPos(profileIndex), this.getYPos(profileIndex), 'Black', 'Gray');\n\n      this.drawButton('profiles.button.save', 'white', profileIndex, 250);\n      this.drawButton('profiles.button.load', 'white', profileIndex, 500);\n      this.drawButton('profiles.button.delete', 'IndianRed', profileIndex, 750);\n    }\n\n    if (this.PreferenceText)\n      DrawText(this.PreferenceText, GuiSubscreen.START_X + 250, GuiSubscreen.START_Y - GuiSubscreen.Y_MOD, 'Black', 'Gray');\n\n    MainCanvas.restore();\n  }\n\n  Click() {\n    super.Click();\n\n    for (let i = 0; i < 3; i++) {\n      const profileIndex = i + 1;\n\n      this.handleProfilesSaving(profileIndex);\n      this.handleProfilesLoading(profileIndex);\n      this.handleProfilesDeleting(profileIndex);\n    }\n  }\n\n  Exit() {\n    CharacterAppearanceForceUpCharacter = -1;\n    CharacterLoadCanvas(Player);\n    this.PreferenceText = '';\n    super.Exit();\n  }\n\n  saveProfile(profileId: number, profileName: string) {\n    if (profileId < 1 || profileId > 3) {\n      conWarn(`Invalid profile id ${profileId}`);\n      return false;\n    }\n\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\n      Player[ModName].ProfilesModule[profileId] = <ProfileEntryModel>{};\n    }\n\n    const saveData: ProfileSaveModel = {\n      GlobalModule: PlayerStorage().GlobalModule,\n      ColorsModule: PlayerStorage().ColorsModule,\n      IntegrationModule: PlayerStorage().IntegrationModule\n    };\n\n    Player[ModName].ProfilesModule[profileId] = {\n      name: profileName,\n      data: saveData\n    };\n\n    return true;\n  }\n\n  loadProfile(profileId: number) {\n    if (profileId < 1 || profileId > 3) {\n      conWarn(`Invalid profile id ${profileId}`);\n      return false;\n    }\n\n    if (Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length < 1) {\n      return false;\n    }\n\n    const data = PlayerStorage().ProfilesModule[profileId].data;\n    if (Object.keys(data).length < 1) {\n      return false;\n    }\n\n    if (data) {\n      Player[ModName].GlobalModule = data.GlobalModule;\n      Player[ModName].ColorsModule = data.ColorsModule;\n      Player[ModName].IntegrationModule = data.IntegrationModule;\n    }\n\n    return true;\n  }\n\n  deleteProfile(profileId: number) {\n    if (profileId < 1 || profileId > 3) {\n      conWarn(`Invalid profile id ${profileId}`);\n      return false;\n    }\n\n    if (!Object.keys(PlayerStorage()?.ProfilesModule?.[profileId]).length) {\n      return false;\n    }\n\n    Player[ModName].ProfilesModule[profileId] = <ProfileEntryModel>{};\n    return true;\n  }\n\n  handleProfilesSaving(profileIndex: number) {\n    const formerIndex = profileIndex - 1;\n    if (MouseIn(this.getXPos(profileIndex) + 250, this.getYPos(profileIndex) - 32, 200, 64)) {\n      const promptedName = prompt(getText('profiles.prompt'));\n\n      if (promptedName === null) return;\n      this.ProfileNames[formerIndex] = promptedName;\n      if (this.ProfileNames[formerIndex] === '') {\n        this.saveProfile(profileIndex, '');\n        this.PreferenceText = `${getText('profiles.text.profile')} ${profileIndex} ${getText('profiles.text.has_been_saved')}`;\n      }\n\n      if (this.ProfileNames[formerIndex] !== '') {\n        this.saveProfile(profileIndex, this.ProfileNames[formerIndex] as string);\n        this.PreferenceText = `${getText('profiles.text.profile')} \"${this.ProfileNames[formerIndex]}\" ${getText(\n          'profiles.text.has_been_saved'\n        )}`;\n      }\n\n      return;\n    }\n  }\n\n  handleProfilesLoading(profileIndex: number) {\n    const formerIndex = profileIndex - 1;\n    if (MouseIn(this.getXPos(profileIndex) + 500, this.getYPos(profileIndex) - 32, 200, 64)) {\n      if (!this.loadProfile(profileIndex)) {\n        this.PreferenceText = `${getText('profiles.text.profile')} ${profileIndex} ${getText('profiles.text.needs_to_be_saved')}`;\n        return;\n      }\n\n      if (this.ProfileNames[formerIndex] === '')\n        this.PreferenceText = `${getText('profiles.text.profile')} ${profileIndex} ${getText('profiles.text.has_been_loaded')}`;\n      if (this.ProfileNames[formerIndex] !== '')\n        this.PreferenceText = `${getText('profiles.text.profile')} \"${this.ProfileNames[formerIndex]}\" ${getText(\n          'profiles.text.has_been_loaded'\n        )}`;\n\n      getModule<ColorsModule>('ColorsModule').reloadTheme();\n\n      return;\n    }\n  }\n\n  handleProfilesDeleting(profileIndex: number) {\n    const formerIndex = profileIndex - 1;\n    if (MouseIn(this.getXPos(profileIndex) + 750, this.getYPos(profileIndex) - 32, 200, 64)) {\n      if (!this.ProfileNames[formerIndex]) return;\n\n      if (this.deleteProfile(profileIndex)) {\n        if (this.ProfileNames[formerIndex] === '') {\n          this.PreferenceText = `${getText('profiles.text.profile')} ${profileIndex} ${getText('profiles.text.has_been_deleted')}`;\n          return;\n        }\n        if (this.ProfileNames[formerIndex] !== '') {\n          this.PreferenceText = `${getText('profiles.text.profile')} \"${this.ProfileNames[formerIndex]}\" ${getText(\n            'profiles.text.has_been_deleted'\n          )}`;\n          this.ProfileNames[formerIndex] = '';\n          return;\n        }\n      }\n\n      if (!this.deleteProfile(profileIndex)) {\n        this.PreferenceText = `${getText('profiles.text.profile')} ${profileIndex} ${getText('profiles.text.not_saved_or_already_deleted')}`;\n        return;\n      }\n      return;\n    }\n  }\n}\n", "import { getText } from '../Translation';\n\nexport function sendLocalSmart(id: string, message: string, timeoutInSeconds?: number) {\n  const div = document.createElement('div');\n  div.id = id;\n  div.setAttribute('class', 'ChatMessage ThemedMessage');\n  div.setAttribute('data-time', ChatRoomCurrentTime());\n  div.setAttribute('data-sender', Player?.MemberNumber + '');\n\n  div.innerHTML =\n    message.replaceAll('\\n\\t', '') +\n    /*html*/ `<br><a class=\"ThemedText\" onClick='document.getElementById(\"${id}\").remove();'><b>Close (Click)</b></a>`;\n\n  ChatRoomAppendChat(div);\n  if (!timeoutInSeconds) return;\n  setTimeout(() => div?.remove(), timeoutInSeconds * 1000);\n}\n\nexport function sendAction(msg: string) {\n  ServerSend('ChatRoomChat', {\n    Content: 'Beep',\n    Type: 'Action',\n    Dictionary: [\n      // EN\n      { Tag: 'Beep', Text: 'msg' },\n      // CN\n      { Tag: '\u53D1\u9001\u79C1\u804A', Text: 'msg' },\n      // DE\n      { Tag: 'Biep', Text: 'msg' },\n      // FR\n      { Tag: 'Sonner', Text: 'msg' },\n      // Message itself\n      { Tag: 'msg', Text: msg }\n    ]\n  });\n}\n\nexport function useLgcModal(prompt: string, acceptCallbackFn: () => void, cancelCallbackFn: () => void) {\n  if (document.getElementById('themed-modal')) return false;\n\n  const modal = document.createElement('div');\n  const modalTitle = document.createElement('div');\n  const modalButtons = document.createElement('div');\n  const modalAcceptButton = document.createElement('div');\n  const modalCancelButton = document.createElement('div');\n\n  modal.classList.add('themed-modal');\n  modalTitle.id = 'modal-prompt';\n  modalButtons.id = 'modal-buttons';\n  modalAcceptButton.id = 'modal-button-accept';\n  modalCancelButton.id = 'modal-button-cancel';\n\n  modalAcceptButton.classList.add('modal-button');\n  modalCancelButton.classList.add('modal-button');\n\n  modalTitle.innerHTML = prompt;\n  modalAcceptButton.innerText = getText('modal.button.accept');\n  modalCancelButton.innerText = getText('modal.button.cancel');\n\n  modalAcceptButton.addEventListener('click', () => {\n    acceptCallbackFn();\n\n    modal.remove();\n  });\n\n  modalCancelButton.addEventListener('click', () => {\n    cancelCallbackFn();\n\n    modal.remove();\n  });\n\n  modalButtons.append(modalAcceptButton, modalCancelButton);\n  modal.append(modalTitle, modalButtons);\n\n  document.body.append(modal);\n}\n\n/** Merges matching properties from `mergeFrom` into `mergeTo`. */\nexport function deepMergeMatchingProperties<T extends object>(mergeTo: T, mergeFrom: T): T  {\n  const mergedObject = { ...mergeTo };\n\n  for (const key in mergeFrom) {\n    if (mergeFrom[key] !== null && typeof mergeFrom[key] === 'object') {\n      (mergedObject as any)[key] = deepMergeMatchingProperties(mergedObject[key] || {}, mergeFrom[key]);\n    } else if (key in mergedObject) {\n      (mergedObject as any)[key] = mergeFrom[key];\n    }\n  }\n\n  return mergedObject;\n}\n\nexport function exposeItem(item: any, name?: string, devExpose?: boolean) {\n  if (devExpose && !IS_DEVEL) return;\n  if (!window['TMD']) window['TMD'] = {};\n  window['TMD'][name || item.name || item] = item;\n}\n\nexport function hasGetter<T extends object>(obj: T, prop: keyof T) {\n  return !!Object.getOwnPropertyDescriptor(obj, prop)?.['get'];\n}\n\nexport function hasSetter<T extends object>(obj: T, prop: keyof T) {\n  return !!Object.getOwnPropertyDescriptor(obj, prop)?.['set'];\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { getModule } from '../Base/Modules';\nimport { ColorsSettingsModel } from '../Models/Colors';\nimport { getText } from '../Translation';\nimport { settingsSave } from '../Utilities/Data';\nimport { sendAction, sendLocalSmart, useLgcModal } from '../Utilities/Other';\nimport { HookPriority, hookFunction } from '../Utilities/SDK';\nimport { ColorsModule } from './Colors';\n\nexport class ShareModule extends BaseModule {\n  Load(): void {\n    hookFunction('ChatRoomMessageProcessHidden', HookPriority.Observe, (args, next) => {\n      const data = args[0] as ServerChatRoomMessage;\n\n      if (data.Content !== 'ThemedTheme') return next(args);\n\n      const sender = ChatRoomCharacter.find((c) => c.MemberNumber == data.Sender);\n      const senderName = CharacterNickname(sender);\n      const prompt = getText('modal.prompt.share')\n        .replace('$Sender', `${senderName} (${data.Sender})`)\n        .replace('$SenderPronoun', CharacterPronoun(sender, 'Possessive', false));\n\n      const message = document.createElement('div');\n      message.id = sender.MemberNumber.toString();\n      message.setAttribute('class', 'themed-chat-modal');\n      message.setAttribute('data-time', ChatRoomCurrentTime());\n      message.setAttribute('data-sender', sender.MemberNumber + '');\n\n      const text = document.createElement('div');\n      const button = document.createElement('div');\n\n      text.innerHTML = getText('modal.prompt.chat_share_notification').replace('$Sender', `${senderName} (${data.Sender})`);\n      button.innerHTML = getText('modal.button.show');\n\n      text.classList.add('modal-prompt');\n      button.classList.add('modal-button');\n\n      const messageData = data.Dictionary[0]['ThemedMessage'];\n\n      const theme = messageData.Theme;\n      const version = messageData.ThemeVersion;\n\n      button.addEventListener('click', () => {\n        if (!version || version !== Player.Themed.Version) {\n          sendLocalSmart('theme-not-up-to-date', 'Theme sent by ' + senderName + ' is not up-to-date!');\n          return;\n        }\n        \n        useLgcModal(\n          prompt,\n          () => {\n            this.acceptShare(theme);\n          },\n          () => { }\n        );\n      });\n\n      message.append(text, button);\n\n      ChatRoomAppendChat(message);\n      ElementScrollToEnd('TextAreaChatLog');\n    });\n  }\n\n  acceptShare(data: ColorsSettingsModel): void {\n    Player.Themed.ColorsModule = data;\n    settingsSave();\n\n    getModule<ColorsModule>('ColorsModule').reloadTheme();\n  }\n\n  share(): void {\n    sendAction(`${CharacterNickname(Player)} shares ${CharacterPronoun(Player, 'Possessive', false)} Themed theme!`);\n\n    const packet = <ServerChatRoomMessage><unknown>{\n      Type: 'Hidden',\n      Content: 'ThemedTheme',\n      Sender: Player.MemberNumber,\n      Dictionary: [<ThemedMessageDictionaryEntry>{ ThemedMessage: { ThemeVersion: Player.Themed.Version, Theme: Player.Themed.ColorsModule } }]\n    };\n\n    ServerSend('ChatRoomChat', packet);\n  }\n}\n", "import { BaseModule } from '../Base/BaseModule';\nimport { BaseMigrator } from '../Migrators/BaseMigrator';\nimport { conInfo } from '../Utilities/Console';\nimport { PlayerStorage, settingsSave } from '../Utilities/Data';\nimport { ModName } from '../Utilities/ModDefinition';\nimport { sendLocalSmart } from '../Utilities/Other';\nimport { hookFunction, HookPriority, ModuleCategory } from '../Utilities/SDK';\n\nexport class VersionModule extends BaseModule {\n  static isItNewVersion: boolean = false;\n  private static Migrators: BaseMigrator[] = [];\n\n  Load(): void {\n    hookFunction(\n      'ChatRoomSync',\n      HookPriority.Observe,\n      (args, next) => {\n        next(args);\n        VersionModule.sendNewVersionMessage();\n      },\n      ModuleCategory.Version\n    );\n  }\n\n  static isNewVersion(current: string | undefined, candidate: string) {\n    if (current !== undefined) {\n      const CURRENT_ = current.split('.'),\n        CANDIDATE_ = candidate.split('.');\n      for (let i = 0; i < 3; i++) {\n        if (CURRENT_[i] === CANDIDATE_[i]) {\n          continue;\n        }\n        return CANDIDATE_[i] > CURRENT_[i];\n      }\n    }\n    if (current === undefined || current === '' || !current) {\n      return true;\n    }\n    return false;\n  }\n\n  static async sendNewVersionMessage() {\n    if (PlayerStorage().GlobalModule.doShowNewVersionMessage && VersionModule.isItNewVersion) {\n      const changelog = await fetch(`${PUBLIC_URL}/html/Changelog.html`)\n        .then((res) => res.text())\n        .then((text) => text.replace(/\\r\\n/g, '\\n'));\n      sendLocalSmart('ThemedNewVersion', changelog);\n    }\n  }\n\n  static saveVersion() {\n    if (PlayerStorage()) {\n      Player[ModName].Version = MOD_VERSION;\n    }\n  }\n\n  static loadVersion() {\n    if (PlayerStorage()?.Version) {\n      return PlayerStorage().Version;\n    }\n    return;\n  }\n\n  private static checkNewVersion() {\n    const LoadedVersion = VersionModule.loadVersion();\n    if (VersionModule.isNewVersion(LoadedVersion, MOD_VERSION)) {\n      VersionModule.isItNewVersion = true;\n    }\n  }\n  \n  private static checkVersionMigration() {\n    const PreviousVersion = VersionModule.loadVersion();\n\n    let saveRequired = false;\n\n    for (const migrator of VersionModule.Migrators) {\n      if (VersionModule.isNewVersion(PreviousVersion, migrator.MigrationVersion)) {\n        saveRequired = saveRequired || migrator.Migrate();\n        conInfo(`Migrating ${ModName} from ${PreviousVersion} to ${migrator.MigrationVersion} with ${migrator.constructor.name}`);\n      }\n    }\n\n    return saveRequired;\n  }\n\n  static check() {\n    VersionModule.checkNewVersion();\n    const saveRequired = VersionModule.checkVersionMigration();\n    \n    VersionModule.saveVersion();\n\n    if (saveRequired) {\n      settingsSave();\n    }\n  }\n\n  static registerMigrator(migrator: BaseMigrator) {\n    VersionModule.Migrators.push(migrator);\n  }\n}\n"],
  "mappings": "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",
  "names": ["swizzle", "Color", "o", "e", "t", "n", "r", "i", "a", "c", "l", "d", "g", "s", "p", "Color", "primaryColor", "elementColor", "accentColor", "textColor", "bcMod", "Color", "Color", "import_color", "drawRect", "color", "Color", "import_color", "Color", "import_color", "Color", "import_color", "Color", "import_color", "Color", "specialColors", "prompt", "prompt"]
}
